name: Create 360¬∞ Panorama 3JS Experience

on:
  workflow_dispatch:
    inputs:
      panorama_scene:
        description: '„Éë„Éé„É©„Éû„Ç∑„Éº„É≥„ÅÆË™¨ÊòéÔºà360Â∫¶È¢®ÊôØÔºâ'
        required: true
        type: string
      music_style:
        description: 'Èü≥Ê•Ω„Çπ„Çø„Ç§„É´„ÅÆË™¨Êòé'
        required: true
        type: string

jobs:
  setup-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      branch-name: ${{ steps.create-branch.outputs.branch-name }}
      folder-name: ${{ steps.create-branch.outputs.folder-name }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Create branch for panorama experience
        id: create-branch
        run: |
          BRANCH_NAME="panorama/$(date +%Y%m%d)-${{ github.run_id }}"
          FOLDER_NAME="panorama-$(date +%Y%m%d)-${{ github.run_id }}"
          git checkout -b $BRANCH_NAME
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git push origin $BRANCH_NAME
          echo "branch-name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "folder-name=$FOLDER_NAME" >> $GITHUB_OUTPUT
          echo "Created branch: $BRANCH_NAME"
          echo "Folder name: $FOLDER_NAME"

  planning:
    runs-on: ubuntu-latest
    needs: [setup-branch]
    permissions:
      contents: write
    outputs:
      planning-completed: ${{ steps.planning.outputs.completed }}
      panorama-prompt: ${{ steps.planning.outputs.panorama-prompt }}
      music-prompt: ${{ steps.planning.outputs.music-prompt }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup-branch.outputs.branch-name }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
      
      - name: „Éë„Éé„É©„Éû3JSË®àÁîª„Ç®„Éº„Ç∏„Çß„É≥„Éà
        id: planning
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "::group::üìã Panorama 3JS Planning Agent Execution"
          echo "Starting at: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          
          # Ë®≠ÂÆö
          PANORAMA_SCENE="${{ inputs.panorama_scene }}"
          MUSIC_STYLE="${{ inputs.music_style }}"
          FOLDER_NAME="${{ needs.setup-branch.outputs.folder-name }}"
          PLANNING_DIR="$FOLDER_NAME/planning"
          
          echo "Panorama scene: $PANORAMA_SCENE"
          echo "Music style: $MUSIC_STYLE"
          echo "Planning folder: $PLANNING_DIR"
          
          # Ë®àÁîª„Éï„Ç©„É´„ÉÄ„Çí‰∫ãÂâç„Å´‰ΩúÊàê
          if [ ! -d "$PLANNING_DIR" ]; then
            mkdir -p "$PLANNING_DIR"
            echo "üìÅ Created planning folder: $PLANNING_DIR"
          fi
          
          # „Éó„É≠„É≥„Éó„Éà„ÅÆÊßãÁØâ
          PROMPT="„ÅÇ„Å™„Åü„ÅØ360Â∫¶„Éë„Éé„É©„Éû3JS‰ΩìÈ®ì„ÅÆÂ∞ÇÈñÄ„Éó„É©„É≥„Éä„Éº„Åß„Åô„ÄÇ„É¶„Éº„Ç∂„Éº„ÅÆÊåáÁ§∫„Åã„ÇâÊúÄÈÅ©„Å™„Éë„Éé„É©„ÉûÁîªÂÉè„Å®Èü≥Ê•Ω„ÇíÁîüÊàê„Åó„ÄÅ3JSÁí∞Â¢É„Å´Áµ±Âêà„Åô„Çã„Åü„ÇÅ„ÅÆË©≥Á¥∞„Å™Ë®àÁîª„ÇíÁ´ã„Å¶„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

          **„É¶„Éº„Ç∂„Éº„ÅÆÊåáÁ§∫**:
          - „Éë„Éé„É©„Éû„Ç∑„Éº„É≥: $PANORAMA_SCENE
          - Èü≥Ê•Ω„Çπ„Çø„Ç§„É´: $MUSIC_STYLE

          **„Çø„Çπ„ÇØ**:
          1. „Éë„Éé„É©„Éû„Ç∑„Éº„É≥„ÇíÂàÜÊûê„Åó„ÄÅ360Â∫¶„Éë„Éé„É©„ÉûÁîªÂÉèÁîüÊàêÁî®„ÅÆ„Éó„É≠„É≥„Éó„Éà„Çí‰ΩúÊàê
          2. Èü≥Ê•Ω„Çπ„Çø„Ç§„É´„ÇíÂàÜÊûê„Åó„ÄÅÈü≥Ê•ΩÁîüÊàêÁî®„ÅÆ„Éó„É≠„É≥„Éó„Éà„Çí‰ΩúÊàê
          3. 3JSÁí∞Â¢É„Åß„ÅÆÁµ±ÂêàÊñπÈáù„ÇíÂÆöÁæ©
          4. Ë®àÁîªÊõ∏„Çí„Äå$PLANNING_DIR/panorama-3js-plan.md„Äç„Å´‰øùÂ≠ò
          5. „Éë„Éé„É©„ÉûÁîªÂÉèÁîüÊàêÁî®„Éó„É≠„É≥„Éó„Éà„Çí„Äå$PLANNING_DIR/panorama-prompt.txt„Äç„Å´‰øùÂ≠ò
          6. Èü≥Ê•ΩÁîüÊàêÁî®„Éó„É≠„É≥„Éó„Éà„Çí„Äå$PLANNING_DIR/music-prompt.txt„Äç„Å´‰øùÂ≠ò

          **„Éë„Éé„É©„ÉûÁîªÂÉèÁîüÊàê„Éó„É≠„É≥„Éó„Éà„ÅÆË¶Å‰ª∂**:
          - Imagen4 Ultra„Å´ÊúÄÈÅ©Âåñ„Åï„Çå„Åü360Â∫¶„Éë„Éé„É©„ÉûÁî®„Éó„É≠„É≥„Éó„Éà
          - „Äå360 degree panoramic view, equirectangular format„Äç„ÇíÂê´„ÇÄ
          - ÂÖ®Êñπ‰Ωç„ÅÆË¶ñË¶öÁöÑË¶ÅÁ¥†„ÇíÊòéÁ¢∫„Å´ÊåáÂÆö
          - È´òËß£ÂÉèÂ∫¶„ÉªÈ´òÂìÅË≥™„ÇíÊÑèË≠ò„Åó„ÅüË®òËø∞
          - 50-100Ë™ûÁ®ãÂ∫¶„ÅÆÈÅ©Âàá„Å™Èï∑„Åï

          **Èü≥Ê•ΩÁîüÊàê„Éó„É≠„É≥„Éó„Éà„ÅÆË¶Å‰ª∂**:
          - Google Lyria„Å´ÊúÄÈÅ©Âåñ„Åï„Çå„ÅüÈü≥Ê•ΩÁîüÊàê„Éó„É≠„É≥„Éó„Éà
          - „Éë„Éé„É©„Éû„Ç∑„Éº„É≥„Å®„ÅÆË™øÂíå„ÇíËÄÉÊÖÆ
          - 30-40ÁßíÁ®ãÂ∫¶„ÅÆÊ•ΩÊõ≤„Å®„Åó„Å¶ÈÅ©Âàá
          - Èõ∞Âõ≤Ê∞ó„ÇÑÊÑüÊÉÖË°®Áèæ„ÇíÊòéÁ¢∫„Å´ÊåáÂÆö

          **3JSÁµ±ÂêàÊñπÈáù**:
          - „Éë„Éé„É©„ÉûÁîªÂÉè„ÅÆÁêÉÈù¢„Éû„ÉÉ„Éî„É≥„Ç∞ÊñπÊ≥ï
          - Èü≥Ê•Ω„ÅÆËá™ÂãïÂÜçÁîüË®≠ÂÆö
          - „É¶„Éº„Ç∂„Éº„Ç§„É≥„Çø„É©„ÇØ„Ç∑„Éß„É≥Ôºà„Éû„Ç¶„Çπ„Éª„Çø„ÉÉ„ÉÅÊìç‰ΩúÔºâ
          - „É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥ÂØæÂøú

          **ÈáçË¶Å**: 
          1. ÂøÖ„Åö‰ª•‰∏ã„ÅÆ6„Å§„ÅÆ„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö
             - $PLANNING_DIR/panorama-3js-plan.md
             - $PLANNING_DIR/panorama-prompt.txt
             - $PLANNING_DIR/panorama-prompt.mdÔºà„É¶„Éº„Ç∂„ÉºÁ¢∫Ë™çÁî®Ôºâ
             - $PLANNING_DIR/music-prompt.txt
             - $PLANNING_DIR/music-prompt.mdÔºà„É¶„Éº„Ç∂„ÉºÁ¢∫Ë™çÁî®Ôºâ
             - $PLANNING_DIR/3js-integration-strategy.md
          2. txt„Éï„Ç°„Ç§„É´„ÅØÊ©üÊ¢∞Âá¶ÁêÜÁî®Ôºà1Ë°å„ÉÜ„Ç≠„Çπ„ÉàÔºâ„ÄÅmd„Éï„Ç°„Ç§„É´„ÅØ„É¶„Éº„Ç∂„ÉºÁ¢∫Ë™çÁî®
          3. ÂêÑ„Éï„Ç°„Ç§„É´„ÅÆÂÜÖÂÆπ„ÅØÂÖ∑‰ΩìÁöÑ„ÅßË©≥Á¥∞„Å´Ë®òËø∞„Åó„Å¶„Åè„Å†„Åï„ÅÑ
          4. „Éï„Ç°„Ç§„É´‰ΩúÊàêÂæå„ÄÅÂøÖ„Åö„Éï„Ç°„Ç§„É´„Éë„Çπ„ÇíÁ¢∫Ë™ç„ÉªÂ†±Âëä„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
          
          echo "üöÄ Starting Planning Agent Claude Code CLI..."
          echo "üìù Prompt length: ${#PROMPT}"
          
          # Claude Code CLI„ÅÆÂÆüË°å
          npx @anthropic-ai/claude-code \
            --allowedTools "Read,Write,Edit" \
            --max-turns 25 \
            --verbose \
            --permission-mode "acceptEdits" \
            -p "$PROMPT" || {
              echo "::error::‚ùå Claude Code CLI execution failed"
              exit 1
            }
          
          # ÁîüÊàê„Åï„Çå„ÅüË®àÁîª„ÅÆÁ¢∫Ë™ç
          echo ""
          echo "üìã Checking generated planning files..."
          
          # „Éë„Éé„É©„Éû„Éó„É≠„É≥„Éó„Éà„ÅÆÁ¢∫Ë™ç
          if [ -f "$PLANNING_DIR/panorama-prompt.txt" ]; then
            PANORAMA_PROMPT=$(cat "$PLANNING_DIR/panorama-prompt.txt" | tr '\n' ' ')
            echo "::notice::‚úÖ Panorama prompt generated"
            echo "Panorama prompt: $PANORAMA_PROMPT"
            echo "panorama-prompt=$PANORAMA_PROMPT" >> $GITHUB_OUTPUT
          else
            echo "::error::‚ùå Panorama prompt file not found"
            exit 1
          fi
          
          # Èü≥Ê•Ω„Éó„É≠„É≥„Éó„Éà„ÅÆÁ¢∫Ë™ç
          if [ -f "$PLANNING_DIR/music-prompt.txt" ]; then
            MUSIC_PROMPT=$(cat "$PLANNING_DIR/music-prompt.txt" | tr '\n' ' ')
            echo "::notice::‚úÖ Music prompt generated"
            echo "Music prompt: $MUSIC_PROMPT"
            echo "music-prompt=$MUSIC_PROMPT" >> $GITHUB_OUTPUT
          else
            echo "::error::‚ùå Music prompt file not found"
            exit 1
          fi
          
          echo "completed=true" >> $GITHUB_OUTPUT
          echo "::endgroup::"
      
      - name: Commit and push planning
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ needs.setup-branch.outputs.folder-name }}/
          if git diff --cached --quiet; then
            echo "No planning files to commit"
          else
            git commit -m "Add panorama 3JS planning: ${{ inputs.panorama_scene }}"
            git push origin ${{ needs.setup-branch.outputs.branch-name }}
          fi

  panorama-generation:
    runs-on: ubuntu-latest
    needs: [setup-branch, planning]
    permissions:
      contents: write
    outputs:
      panorama-completed: ${{ steps.panorama.outputs.completed }}
      google-panorama-url: ${{ steps.panorama.outputs.google-panorama-url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup-branch.outputs.branch-name }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
      
      - name: 360Â∫¶„Éë„Éé„É©„ÉûÁîªÂÉèÁîüÊàê„Ç®„Éº„Ç∏„Çß„É≥„Éà (Imagen4 Ultra)
        id: panorama
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "::group::üåê Panorama Generation Agent Execution (Imagen4 Ultra)"
          echo "Starting at: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          
          # Ë®≠ÂÆö
          PANORAMA_SCENE="${{ inputs.panorama_scene }}"
          PLANNED_PANORAMA_PROMPT="${{ needs.planning.outputs.panorama-prompt }}"
          FOLDER_NAME="${{ needs.setup-branch.outputs.folder-name }}"
          PANORAMA_DIR="$FOLDER_NAME/panorama"
          
          echo "Panorama scene: $PANORAMA_SCENE"
          echo "Planned panorama prompt: $PLANNED_PANORAMA_PROMPT"
          echo "Target folder: $PANORAMA_DIR"
          
          # „Éë„Éé„É©„Éû„Éï„Ç©„É´„ÉÄ„Çí‰∫ãÂâç„Å´‰ΩúÊàê
          if [ ! -d "$PANORAMA_DIR" ]; then
            mkdir -p "$PANORAMA_DIR"
            echo "üìÅ Created panorama folder: $PANORAMA_DIR"
          fi
          
          # MCPË®≠ÂÆö„ÅÆÁ¢∫Ë™ç
          MCP_CONFIG_PATH=".claude/mcp-kamuicode.json"
          MCP_CONFIG_ABS_PATH="$(pwd)/$MCP_CONFIG_PATH"
          
          echo "üìã MCP Configuration Check:"
          echo "Working directory: $(pwd)"
          echo "MCP config path: $MCP_CONFIG_PATH"
          echo "MCP config absolute path: $MCP_CONFIG_ABS_PATH"
          echo "Allowed tools: mcp__t2i-fal-imagen4-ultra__imagen4_ultra_submit,mcp__t2i-fal-imagen4-ultra__imagen4_ultra_status,mcp__t2i-fal-imagen4-ultra__imagen4_ultra_result,Bash"
          
          # „Éó„É≠„É≥„Éó„Éà„ÅÆÊßãÁØâ
          PROMPT="‰ª•‰∏ã„ÅÆ„Éó„É≠„É≥„Éó„Éà„ÅßImagen4 Ultra„Çí‰ΩøÁî®„Åó„Å¶360Â∫¶„Éë„Éé„É©„ÉûÁîªÂÉè„ÇíÁîüÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

          **ÂÖÉ„ÅÆ„É¶„Éº„Ç∂„ÉºÊåáÁ§∫**: $PANORAMA_SCENE
          **ÊúÄÈÅ©Âåñ„Åï„Çå„Åü„Éë„Éé„É©„ÉûÁîªÂÉèÁîüÊàê„Éó„É≠„É≥„Éó„Éà**: $PLANNED_PANORAMA_PROMPT

          **ÂÆüË°åÊâãÈ†Ü**:
          1. **ÊúÄÈÅ©Âåñ„Åï„Çå„Åü„Éë„Éé„É©„ÉûÁîªÂÉèÁîüÊàê„Éó„É≠„É≥„Éó„Éà**Ôºà$PLANNED_PANORAMA_PROMPTÔºâ„Çí‰ΩøÁî®„Åó„Å¶Imagen4 Ultra„Åß360Â∫¶„Éë„Éé„É©„ÉûÁîªÂÉèÁîüÊàê
          2. \`mcp__t2i-fal-imagen4-ultra__imagen4_ultra_submit\`„ÉÑ„Éº„É´„Åß„Éë„Éé„É©„ÉûÁîªÂÉèÁîüÊàê„ÇíÈñãÂßã
          3. \`mcp__t2i-fal-imagen4-ultra__imagen4_ultra_status\`„Åß„Çπ„ÉÜ„Éº„Çø„ÇπÁ¢∫Ë™ç
          4. \`mcp__t2i-fal-imagen4-ultra__imagen4_ultra_result\`„ÅßÁµêÊûúÂèñÂæó„Åó„Å¶Google URL„ÇíÂèñÂæó
          5. **ÈáçË¶Å**: ÁîüÊàêÊôÇ„Å´ÂèñÂæó„Åó„ÅüGoogle URL„Çí„Äå$FOLDER_NAME/google-panorama-url.txt„Äç„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò
          6. ÂèñÂæó„Åó„ÅüGoogle URL„ÇíBash„ÉÑ„Éº„É´„Åß„Äå$PANORAMA_DIR/generated-panorama.jpg„Äç„Å´„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ‰øùÂ≠ò

          **ÈáçË¶Å„Å™Ê≥®ÊÑèÁÇπ**:
          - Google URL„ÅÆÊúâÂäπÊúüÈôê„ÅØÁ¥Ñ1ÊôÇÈñì„ÅÆ„Åü„ÇÅ„ÄÅÁîüÊàêÂæå„Åô„Åê„Å´„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ
          - ÂøÖ„ÅöGoogleÊèê‰æõ„ÅÆË™çË®ºÊ∏àURL„Çí‰ΩøÁî®
          - „Éë„Éé„É©„ÉûÁîªÂÉè„ÅØÂøÖ„Åö„Äå$PANORAMA_DIR„Äç„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´‰øùÂ≠ò
          - „Éï„Ç°„Ç§„É´Âêç„ÅØ„Äågenerated-panorama.jpg„Äç„Å®„Åô„Çã
          - **ÊúÄÈáçË¶Å**: ÁîüÊàêÊôÇ„ÅÆGoogle URL„Çí„Äå$FOLDER_NAME/google-panorama-url.txt„Äç„Å´‰øùÂ≠ò„Åó„ÄÅÊ¨°„ÅÆ„Ç∏„Éß„Éñ„ÅßÂèÇÁÖß„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åô„Çã
          - **‰∏°Êñπ„ÇíÂÆüË°å**: ‚ë†Google URL„Çí„ÉÜ„Ç≠„Çπ„Éà„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò ‚ë°Google URL„Åã„ÇâÁîªÂÉè„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„É≠„Éº„Ç´„É´‰øùÂ≠ò
          
          **Âá¶ÁêÜ„ÅÆÊµÅ„Çå**:
          1. „Éë„Éé„É©„ÉûÁîªÂÉèÁîüÊàê„Åó„Å¶Google URL„ÇíÂèñÂæó
          2. Google URL„Çí„Äå$FOLDER_NAME/google-panorama-url.txt„Äç„Å´‰øùÂ≠òÔºà3JSÁµ±ÂêàÁî®Ôºâ
          3. Âêå„ÅòGoogle URL„Åã„Çâ„Äå$PANORAMA_DIR/generated-panorama.jpg„Äç„Å´„ÉÄ„Ç¶„É≥„É≠„Éº„ÉâÔºà‰øùÂ≠òÁî®Ôºâ"
          
          echo "üöÄ Starting Panorama Generation Agent Claude Code CLI..."
          echo "üìù Prompt length: ${#PROMPT}"
          
          # Claude Code CLI„ÅÆÂÆüË°å
          npx @anthropic-ai/claude-code \
            --mcp-config="$MCP_CONFIG_ABS_PATH" \
            --allowedTools "mcp__t2i-fal-imagen4-ultra__imagen4_ultra_submit,mcp__t2i-fal-imagen4-ultra__imagen4_ultra_status,mcp__t2i-fal-imagen4-ultra__imagen4_ultra_result,Bash" \
            --max-turns 25 \
            --verbose \
            --permission-mode "acceptEdits" \
            -p "$PROMPT" || {
              echo "::error::‚ùå Claude Code CLI execution failed"
              exit 1
            }
          
          # ÁîüÊàê„Åï„Çå„Åü„Éë„Éé„É©„ÉûÁîªÂÉè„ÅÆÁ¢∫Ë™ç
          echo ""
          echo "üåê Checking generated panorama images..."
          if [ -d "$PANORAMA_DIR" ]; then
            IMAGE_COUNT=$(find "$PANORAMA_DIR" -name "*.jpg" -o -name "*.png" -o -name "*.jpeg" | wc -l)
            echo "::notice::üåê Generated $IMAGE_COUNT panorama images"
            if [ "$IMAGE_COUNT" -gt 0 ]; then
              echo "Panorama image files:"
              FIRST_IMAGE=$(find "$PANORAMA_DIR" -name "*.jpg" -o -name "*.png" -o -name "*.jpeg" | head -1)
              echo "First image: $FIRST_IMAGE"
              
              # Google URL„ÇíÁ¢∫Ë™ç„Åó„Å¶GitHub Output„Å´Ë®≠ÂÆö
              if [ -f "$FOLDER_NAME/google-panorama-url.txt" ]; then
                GOOGLE_URL=$(cat "$FOLDER_NAME/google-panorama-url.txt")
                echo "Google panorama URL: $GOOGLE_URL"
                echo "google-panorama-url=$GOOGLE_URL" >> $GITHUB_OUTPUT
              else
                echo "::warning::‚ö†Ô∏è Google panorama URL not found in file"
                echo "google-panorama-url=" >> $GITHUB_OUTPUT
              fi
            else
              echo "::error::‚ùå No panorama images were generated"
              exit 1
            fi
          else
            echo "::error::‚ùå Panorama directory not found"
            exit 1
          fi
          
          echo "completed=true" >> $GITHUB_OUTPUT
          echo "::endgroup::"
      
      - name: Commit and push panorama images
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ needs.setup-branch.outputs.folder-name }}/
          if git diff --cached --quiet; then
            echo "No panorama images to commit"
          else
            git commit -m "Add generated panorama images: ${{ inputs.panorama_scene }}"
            git push origin ${{ needs.setup-branch.outputs.branch-name }}
          fi

  music-generation:
    runs-on: ubuntu-latest
    needs: [setup-branch, planning]
    permissions:
      contents: write
    outputs:
      music-completed: ${{ steps.music.outputs.completed }}
      google-music-url: ${{ steps.music.outputs.google-music-url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup-branch.outputs.branch-name }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
      
      - name: Èü≥Ê•ΩÁîüÊàê„Ç®„Éº„Ç∏„Çß„É≥„Éà (Google Lyria)
        id: music
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "::group::üéµ Music Generation Agent Execution (Google Lyria)"
          echo "Starting at: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          
          # Ë®≠ÂÆö
          MUSIC_STYLE="${{ inputs.music_style }}"
          PLANNED_MUSIC_PROMPT="${{ needs.planning.outputs.music-prompt }}"
          FOLDER_NAME="${{ needs.setup-branch.outputs.folder-name }}"
          MUSIC_DIR="$FOLDER_NAME/music"
          
          echo "Music style: $MUSIC_STYLE"
          echo "Planned music prompt: $PLANNED_MUSIC_PROMPT"
          echo "Target folder: $MUSIC_DIR"
          
          # Èü≥Ê•Ω„Éï„Ç©„É´„ÉÄ„Çí‰∫ãÂâç„Å´‰ΩúÊàê
          if [ ! -d "$MUSIC_DIR" ]; then
            mkdir -p "$MUSIC_DIR"
            echo "üìÅ Created music folder: $MUSIC_DIR"
          fi
          
          # MCPË®≠ÂÆö„ÅÆÁ¢∫Ë™ç
          MCP_CONFIG_PATH=".claude/mcp-kamuicode.json"
          MCP_CONFIG_ABS_PATH="$(pwd)/$MCP_CONFIG_PATH"
          
          echo "üìã MCP Configuration Check:"
          echo "Working directory: $(pwd)"
          echo "MCP config path: $MCP_CONFIG_PATH"
          echo "MCP config absolute path: $MCP_CONFIG_ABS_PATH"
          echo "Allowed tools: mcp__t2m-google-lyria__lyria_submit,mcp__t2m-google-lyria__lyria_status,mcp__t2m-google-lyria__lyria_result,Bash"
          
          # „Éó„É≠„É≥„Éó„Éà„ÅÆÊßãÁØâ
          PROMPT="‰ª•‰∏ã„ÅÆ„Éó„É≠„É≥„Éó„Éà„ÅßGoogle Lyria„Çí‰ΩøÁî®„Åó„Å¶Èü≥Ê•Ω„ÇíÁîüÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

          **ÂÖÉ„ÅÆ„É¶„Éº„Ç∂„ÉºÊåáÁ§∫**: $MUSIC_STYLE
          **ÊúÄÈÅ©Âåñ„Åï„Çå„ÅüÈü≥Ê•ΩÁîüÊàê„Éó„É≠„É≥„Éó„Éà**: $PLANNED_MUSIC_PROMPT

          **ÂÆüË°åÊâãÈ†Ü**:
          1. **ÊúÄÈÅ©Âåñ„Åï„Çå„ÅüÈü≥Ê•ΩÁîüÊàê„Éó„É≠„É≥„Éó„Éà**Ôºà$PLANNED_MUSIC_PROMPTÔºâ„Çí‰ΩøÁî®„Åó„Å¶Google Lyria„ÅßÈü≥Ê•ΩÁîüÊàê
          2. \`mcp__t2m-google-lyria__lyria_submit\`„ÉÑ„Éº„É´„ÅßÈü≥Ê•ΩÁîüÊàê„ÇíÈñãÂßã
          3. \`mcp__t2m-google-lyria__lyria_status\`„Åß„Çπ„ÉÜ„Éº„Çø„ÇπÁ¢∫Ë™ç
          4. \`mcp__t2m-google-lyria__lyria_result\`„ÅßÁµêÊûúÂèñÂæó„Åó„Å¶Google URL„ÇíÂèñÂæó
          5. **ÈáçË¶Å**: ÁîüÊàêÊôÇ„Å´ÂèñÂæó„Åó„ÅüGoogle URL„Çí„Äå$FOLDER_NAME/google-music-url.txt„Äç„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò
          6. ÂèñÂæó„Åó„ÅüGoogle URL„ÇíBash„ÉÑ„Éº„É´„Åß„Äå$MUSIC_DIR/generated-music.wav„Äç„Å´„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ‰øùÂ≠ò

          **ÈáçË¶Å„Å™Ê≥®ÊÑèÁÇπ**:
          - Google URL„ÅÆÊúâÂäπÊúüÈôê„ÅØÁ¥Ñ1ÊôÇÈñì„ÅÆ„Åü„ÇÅ„ÄÅÁîüÊàêÂæå„Åô„Åê„Å´„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ
          - ÂøÖ„ÅöGoogleÊèê‰æõ„ÅÆË™çË®ºÊ∏àURL„Çí‰ΩøÁî®
          - Èü≥Ê•Ω„ÅØÂøÖ„Åö„Äå$MUSIC_DIR„Äç„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´‰øùÂ≠ò
          - „Éï„Ç°„Ç§„É´Âêç„ÅØ„Äågenerated-music.wav„Äç„Å®„Åô„Çã
          - **ÊúÄÈáçË¶Å**: ÁîüÊàêÊôÇ„ÅÆGoogle URL„Çí„Äå$FOLDER_NAME/google-music-url.txt„Äç„Å´‰øùÂ≠ò„Åó„ÄÅÊ¨°„ÅÆ„Ç∏„Éß„Éñ„ÅßÂèÇÁÖß„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åô„Çã
          - **‰∏°Êñπ„ÇíÂÆüË°å**: ‚ë†Google URL„Çí„ÉÜ„Ç≠„Çπ„Éà„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò ‚ë°Google URL„Åã„ÇâÈü≥Ê•Ω„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„É≠„Éº„Ç´„É´‰øùÂ≠ò
          
          **Âá¶ÁêÜ„ÅÆÊµÅ„Çå**:
          1. Èü≥Ê•ΩÁîüÊàê„Åó„Å¶Google URL„ÇíÂèñÂæó
          2. Google URL„Çí„Äå$FOLDER_NAME/google-music-url.txt„Äç„Å´‰øùÂ≠òÔºà3JSÁµ±ÂêàÁî®Ôºâ
          3. Âêå„ÅòGoogle URL„Åã„Çâ„Äå$MUSIC_DIR/generated-music.wav„Äç„Å´„ÉÄ„Ç¶„É≥„É≠„Éº„ÉâÔºà‰øùÂ≠òÁî®Ôºâ"
          
          echo "üöÄ Starting Music Generation Agent Claude Code CLI..."
          echo "üìù Prompt length: ${#PROMPT}"
          
          # Claude Code CLI„ÅÆÂÆüË°å
          npx @anthropic-ai/claude-code \
            --mcp-config="$MCP_CONFIG_ABS_PATH" \
            --allowedTools "mcp__t2m-google-lyria__lyria_submit,mcp__t2m-google-lyria__lyria_status,mcp__t2m-google-lyria__lyria_result,Bash" \
            --max-turns 25 \
            --verbose \
            --permission-mode "acceptEdits" \
            -p "$PROMPT" || {
              echo "::error::‚ùå Claude Code CLI execution failed"
              exit 1
            }
          
          # ÁîüÊàê„Åï„Çå„ÅüÈü≥Ê•Ω„ÅÆÁ¢∫Ë™ç
          echo ""
          echo "üéµ Checking generated music..."
          if [ -d "$MUSIC_DIR" ]; then
            MUSIC_COUNT=$(find "$MUSIC_DIR" -name "*.wav" -o -name "*.mp3" -o -name "*.ogg" | wc -l)
            echo "::notice::üéµ Generated $MUSIC_COUNT music files"
            if [ "$MUSIC_COUNT" -gt 0 ]; then
              echo "Music files:"
              FIRST_MUSIC=$(find "$MUSIC_DIR" -name "*.wav" -o -name "*.mp3" -o -name "*.ogg" | head -1)
              echo "First music: $FIRST_MUSIC"
              
              # Google URL„ÇíÁ¢∫Ë™ç„Åó„Å¶GitHub Output„Å´Ë®≠ÂÆö
              if [ -f "$FOLDER_NAME/google-music-url.txt" ]; then
                GOOGLE_URL=$(cat "$FOLDER_NAME/google-music-url.txt")
                echo "Google music URL: $GOOGLE_URL"
                echo "google-music-url=$GOOGLE_URL" >> $GITHUB_OUTPUT
              else
                echo "::warning::‚ö†Ô∏è Google music URL not found in file"
                echo "google-music-url=" >> $GITHUB_OUTPUT
              fi
            else
              echo "::error::‚ùå No music files were generated"
              exit 1
            fi
          else
            echo "::error::‚ùå Music directory not found"
            exit 1
          fi
          
          echo "completed=true" >> $GITHUB_OUTPUT
          echo "::endgroup::"
      
      - name: Commit and push music files
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ needs.setup-branch.outputs.folder-name }}/
          if git diff --cached --quiet; then
            echo "No music files to commit"
          else
            git commit -m "Add generated music: ${{ inputs.music_style }}"
            git push origin ${{ needs.setup-branch.outputs.branch-name }}
          fi

  threejs-integration:
    runs-on: ubuntu-latest
    needs: [setup-branch, planning, panorama-generation, music-generation]
    permissions:
      contents: write
    outputs:
      integration-completed: ${{ steps.integration.outputs.completed }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup-branch.outputs.branch-name }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
      
      - name: 3JSÁµ±Âêà„Ç®„Éº„Ç∏„Çß„É≥„Éà
        id: integration
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "::group::üåê 3JS Integration Agent Execution"
          echo "Starting at: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          
          # Ë®≠ÂÆö
          FOLDER_NAME="${{ needs.setup-branch.outputs.folder-name }}"
          PANORAMA_DIR="$FOLDER_NAME/panorama"
          MUSIC_DIR="$FOLDER_NAME/music"
          THREEJS_DIR="$FOLDER_NAME/3js-experience"
          GOOGLE_PANORAMA_URL="${{ needs.panorama-generation.outputs.google-panorama-url }}"
          GOOGLE_MUSIC_URL="${{ needs.music-generation.outputs.google-music-url }}"
          
          echo "3JS experience folder: $THREEJS_DIR"
          echo "Google panorama URL: $GOOGLE_PANORAMA_URL"
          echo "Google music URL: $GOOGLE_MUSIC_URL"
          
          # 3JSÁµ±Âêà„Éï„Ç©„É´„ÉÄ„Çí‰∫ãÂâç„Å´‰ΩúÊàê
          if [ ! -d "$THREEJS_DIR" ]; then
            mkdir -p "$THREEJS_DIR"
            echo "üìÅ Created 3JS experience folder: $THREEJS_DIR"
          fi
          
          # ÂøÖË¶Å„Å™„Çµ„Éñ„Éï„Ç©„É´„ÉÄ„ÇÇ‰ΩúÊàê
          mkdir -p "$THREEJS_DIR/assets"
          mkdir -p "$THREEJS_DIR/js"
          
          # ÁîüÊàê„Åï„Çå„Åü„Ç¢„Çª„ÉÉ„Éà„ÅÆÁ¢∫Ë™ç
          PANORAMA_FILE=""
          MUSIC_FILE=""
          
          if [ -d "$PANORAMA_DIR" ]; then
            PANORAMA_FILE=$(find "$PANORAMA_DIR" -name "*.jpg" -o -name "*.png" -o -name "*.jpeg" | head -1)
            echo "Panorama file: $PANORAMA_FILE"
          fi
          
          if [ -d "$MUSIC_DIR" ]; then
            MUSIC_FILE=$(find "$MUSIC_DIR" -name "*.wav" -o -name "*.mp3" -o -name "*.ogg" | head -1)
            echo "Music file: $MUSIC_FILE"
          fi
          
          # „Éó„É≠„É≥„Éó„Éà„ÅÆÊßãÁØâ
          PROMPT="360Â∫¶„Éë„Éé„É©„ÉûÁîªÂÉè„Å®Èü≥Ê•Ω„ÇíÁµ±Âêà„Åó„Åü3JS‰ΩìÈ®ì„Çí‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

          **Âà©Áî®ÂèØËÉΩ„Å™„Ç¢„Çª„ÉÉ„Éà**:
          - „Éë„Éé„É©„ÉûÁîªÂÉè: $PANORAMA_FILE
          - Èü≥Ê•Ω„Éï„Ç°„Ç§„É´: $MUSIC_FILE
          - Google „Éë„Éé„É©„ÉûURL: $GOOGLE_PANORAMA_URL
          - Google Èü≥Ê•ΩURL: $GOOGLE_MUSIC_URL

          **‰ΩúÊàê„Åô„Çã3JS‰ΩìÈ®ì„ÅÆË¶Å‰ª∂**:
          1. **index.html**: „É°„Ç§„É≥„ÅÆHTML„Éï„Ç°„Ç§„É´
          2. **assets/**: „Éë„Éé„É©„ÉûÁîªÂÉè„Å®Èü≥Ê•Ω„Çí„Ç≥„Éî„Éº
          3. **js/**: Three.js„É©„Ç§„Éñ„É©„É™
          4. **Ê©üËÉΩ**: 360Â∫¶„Éë„Éé„É©„ÉûË°®Á§∫„ÄÅÈü≥Ê•ΩÂÜçÁîü„ÄÅ„Éû„Ç¶„Çπ/„Çø„ÉÉ„ÉÅÊìç‰Ωú

          **ÂÆüË°åÊâãÈ†Ü**:
          1. ÁîüÊàê„Åï„Çå„Åü„Éë„Éé„É©„ÉûÁîªÂÉè„Çí„Äå$THREEJS_DIR/assets/panorama.jpg„Äç„Å´„Ç≥„Éî„Éº
          2. ÁîüÊàê„Åï„Çå„ÅüÈü≥Ê•Ω„Çí„Äå$THREEJS_DIR/assets/music.wav„Äç„Å´„Ç≥„Éî„Éº
          3. Three.js CDN„Çí‰ΩøÁî®„Åó„ÅüHTML„Éï„Ç°„Ç§„É´„Çí„Äå$THREEJS_DIR/index.html„Äç„Å´‰ΩúÊàê
          4. „Éë„Éé„É©„ÉûÁîªÂÉè„ÇíÁêÉÈù¢„Å´„Éû„ÉÉ„Éî„É≥„Ç∞
          5. Èü≥Ê•Ω„ÅÆËá™ÂãïÂÜçÁîüË®≠ÂÆö
          6. „Éû„Ç¶„Çπ/„Çø„ÉÉ„ÉÅ„Åß„ÅÆË¶ñÁÇπÊìç‰Ωú
          7. „É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥ÂØæÂøú
          8. „Éï„É´„Çπ„ÇØ„É™„Éº„É≥ÂØæÂøú

          **HTMLÊßãÈÄ†„ÅÆ‰æã**:
          ```html
          <!DOCTYPE html>
          <html lang=\"ja\">
          <head>
              <meta charset=\"UTF-8\">
              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
              <title>360¬∞ Panorama Experience</title>
              <style>
                  body { margin: 0; overflow: hidden; font-family: Arial, sans-serif; }
                  #container { width: 100vw; height: 100vh; }
                  #info { position: absolute; top: 10px; left: 10px; color: white; z-index: 100; }
                  #controls { position: absolute; bottom: 20px; left: 50%; transform: translateX(-50%); z-index: 100; }
                  button { padding: 10px 20px; margin: 0 5px; background: rgba(0,0,0,0.7); color: white; border: none; border-radius: 5px; cursor: pointer; }
                  button:hover { background: rgba(0,0,0,0.9); }
              </style>
          </head>
          <body>
              <div id=\"container\"></div>
              <div id=\"info\">
                  <h3>360¬∞ Panorama Experience</h3>
                  <p>„Éû„Ç¶„Çπ„ÇÑ„Çø„ÉÉ„ÉÅ„ÅßË¶ñÁÇπ„ÇíÂ§âÊõ¥„Åß„Åç„Åæ„Åô</p>
              </div>
              <div id=\"controls\">
                  <button id=\"playPause\">Èü≥Ê•Ω ÂÜçÁîü/ÂÅúÊ≠¢</button>
                  <button id=\"fullscreen\">„Éï„É´„Çπ„ÇØ„É™„Éº„É≥</button>
              </div>
              <audio id=\"backgroundMusic\" loop>
                  <source src=\"assets/music.wav\" type=\"audio/wav\">
              </audio>
              <script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"></script>
              <script>
                  // Three.js„ÅÆÂàùÊúüÂåñ„Å®„Éë„Éé„É©„ÉûË°®Á§∫„ÅÆ„Ç≥„Éº„Éâ
              </script>
          </body>
          </html>
          ```

          **ÈáçË¶Å**:
          1. ÁîüÊàê„Åï„Çå„Åü„Ç¢„Çª„ÉÉ„Éà„Éï„Ç°„Ç§„É´„ÇíÈÅ©Âàá„Å´„Ç≥„Éî„Éº„Åó„Å¶„Åè„Å†„Åï„ÅÑ
          2. Three.js„ÅÆCDN„Çí‰ΩøÁî®„Åó„Å¶„É©„Ç§„Éñ„É©„É™„ÇíË™≠„ÅøËæº„Çì„Åß„Åè„Å†„Åï„ÅÑ
          3. „Éë„Éé„É©„ÉûÁîªÂÉè„ÅØÁêÉÈù¢„Ç∏„Ç™„É°„Éà„É™„Å´„Éû„ÉÉ„Éî„É≥„Ç∞„Åó„Å¶„Åè„Å†„Åï„ÅÑ
          4. Èü≥Ê•Ω„ÅØËá™ÂãïÂÜçÁîü„Å®„É¶„Éº„Ç∂„Éº„Ç≥„É≥„Éà„É≠„Éº„É´„ÅÆ‰∏°Êñπ„Å´ÂØæÂøú„Åó„Å¶„Åè„Å†„Åï„ÅÑ
          5. „É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥„Åß„É¢„Éê„Ç§„É´ÂØæÂøú„Åó„Å¶„Åè„Å†„Åï„ÅÑ
          6. „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞„ÇíÈÅ©Âàá„Å´ÂÆüË£Ö„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
          
          echo "üöÄ Starting 3JS Integration Agent Claude Code CLI..."
          echo "üìù Prompt length: ${#PROMPT}"
          
          # Claude Code CLI„ÅÆÂÆüË°å
          npx @anthropic-ai/claude-code \
            --allowedTools "Read,Write,Edit,Bash" \
            --max-turns 25 \
            --verbose \
            --permission-mode "acceptEdits" \
            -p "$PROMPT" || {
              echo "::error::‚ùå Claude Code CLI execution failed"
              exit 1
            }
          
          # 3JSÁµ±ÂêàÁµêÊûú„ÅÆÁ¢∫Ë™ç
          echo ""
          echo "üåê Checking 3JS integration results..."
          
          if [ -f "$THREEJS_DIR/index.html" ]; then
            echo "::notice::‚úÖ 3JS experience HTML created"
            echo "HTML file size: $(stat -c%s "$THREEJS_DIR/index.html" 2>/dev/null || stat -f%z "$THREEJS_DIR/index.html" 2>/dev/null || echo "0") bytes"
          else
            echo "::error::‚ùå 3JS experience HTML not found"
            exit 1
          fi
          
          if [ -d "$THREEJS_DIR/assets" ]; then
            ASSET_COUNT=$(find "$THREEJS_DIR/assets" -type f | wc -l)
            echo "::notice::üìÅ Assets folder contains $ASSET_COUNT files"
            if [ "$ASSET_COUNT" -gt 0 ]; then
              echo "Asset files:"
              find "$THREEJS_DIR/assets" -type f | head -5
            fi
          else
            echo "::warning::‚ö†Ô∏è Assets folder not found"
          fi
          
          echo "completed=true" >> $GITHUB_OUTPUT
          echo "::endgroup::"
      
      - name: Commit and push 3JS experience
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ needs.setup-branch.outputs.folder-name }}/
          if git diff --cached --quiet; then
            echo "No 3JS experience files to commit"
          else
            git commit -m "Add 3JS panorama experience: ${{ inputs.panorama_scene }}"
            git push origin ${{ needs.setup-branch.outputs.branch-name }}
          fi

  create-pr:
    runs-on: ubuntu-latest
    needs: [setup-branch, planning, panorama-generation, music-generation, threejs-integration]
    permissions:
      contents: write
      pull-requests: write
      actions: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup-branch.outputs.branch-name }}
      
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          # „Éñ„É©„É≥„ÉÅÂêç„ÇíÂèñÂæó
          BRANCH_NAME="${{ needs.setup-branch.outputs.branch-name }}"
          
          # Â§âÊõ¥„Çí„Ç≥„Éü„ÉÉ„Éà
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # ÊúÄÁµÇÊàêÊûúÁâ©„ÅÆÁ¢∫Ë™ç„Å®„Ç≥„Éü„ÉÉ„Éà
          FOLDER_NAME="${{ needs.setup-branch.outputs.folder-name }}"
          echo "=== Final Panorama 3JS Experience Summary ==="
          echo "Experience folder: $FOLDER_NAME"
          
          PANORAMA_COUNT=0
          MUSIC_COUNT=0
          THREEJS_READY=false
          
          if [ -d "$FOLDER_NAME" ]; then
            echo "‚úÖ Experience folder exists: $FOLDER_NAME"
            echo "Contents:"
            ls -la "$FOLDER_NAME"
            
            # „Éë„Éé„É©„ÉûÁîªÂÉè„ÅÆÁ¢∫Ë™ç
            if [ -d "$FOLDER_NAME/panorama" ]; then
              PANORAMA_COUNT=$(find "$FOLDER_NAME/panorama" -name "*.jpg" -o -name "*.png" -o -name "*.jpeg" | wc -l)
              echo "‚úÖ Panorama directory exists with $PANORAMA_COUNT files"
            else
              echo "‚ùå Panorama directory not found"
            fi
            
            # Èü≥Ê•Ω„Éï„Ç°„Ç§„É´„ÅÆÁ¢∫Ë™ç
            if [ -d "$FOLDER_NAME/music" ]; then
              MUSIC_COUNT=$(find "$FOLDER_NAME/music" -name "*.wav" -o -name "*.mp3" -o -name "*.ogg" | wc -l)
              echo "‚úÖ Music directory exists with $MUSIC_COUNT files"
            else
              echo "‚ùå Music directory not found"
            fi
            
            # 3JS‰ΩìÈ®ì„ÅÆÁ¢∫Ë™ç
            if [ -f "$FOLDER_NAME/3js-experience/index.html" ]; then
              THREEJS_READY=true
              echo "‚úÖ 3JS experience ready"
            else
              echo "‚ùå 3JS experience not found"
            fi
          else
            echo "‚ùå Experience folder not found: $FOLDER_NAME"
          fi
          
          # „Åô„Åπ„Å¶„ÅÆ„Éï„Ç°„Ç§„É´„Çí„Ç≥„Éü„ÉÉ„Éà
          git add "$FOLDER_NAME/" 2>/dev/null || true
          
          # „Ç≥„Éü„ÉÉ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„Çí‰ΩúÊàê
          COMMIT_MESSAGE="Add new 360¬∞ Panorama 3JS Experience: ${{ inputs.panorama_scene }}
          
          „Ç∑„Éº„É≥: ${{ inputs.panorama_scene }}
          Èü≥Ê•Ω: ${{ inputs.music_style }}
          ÁîüÊàêÊó•ÊôÇ: $(date -u +%Y-%m-%d\ %H:%M:%S)\ UTC
          
          üìä Generation Summary:
          - „Éë„Éé„É©„ÉûÁîªÂÉè: $PANORAMA_COUNT files (Imagen4 Ultra)
          - Èü≥Ê•Ω: $MUSIC_COUNT files (Google Lyria)
          - 3JS‰ΩìÈ®ì: $([ "$THREEJS_READY" = true ] && echo "Ready" || echo "Not Ready")
          
          üåê Generated with Claude Code SDK & kamuicode MCP
          Co-Authored-By: Claude <noreply@anthropic.com>"
          
          # „Ç≥„Éü„ÉÉ„Éà
          if git diff --cached --quiet; then
            echo "Warning: No changes to commit"
            git commit --allow-empty -m "$COMMIT_MESSAGE"
          else
            git commit -m "$COMMIT_MESSAGE"
          fi
          
          # „Éó„ÉÉ„Ç∑„É•
          git push origin $BRANCH_NAME
          
          # GitHub Actions Summary„Å´ÁµêÊûú„ÇíÂá∫Âäõ
          echo "# üåê 360¬∞ Panorama 3JS Experience ÂÆå‰∫Ü" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## üìã ÁîüÊàêÊÉÖÂ†±" >> $GITHUB_STEP_SUMMARY
          echo "- **„Éë„Éé„É©„Éû„Ç∑„Éº„É≥**: ${{ inputs.panorama_scene }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Èü≥Ê•Ω„Çπ„Çø„Ç§„É´**: ${{ inputs.music_style }}" >> $GITHUB_STEP_SUMMARY
          echo "- **ÁîüÊàêÊó•ÊôÇ**: $(date -u +%Y-%m-%d\ %H:%M:%S)\ UTC" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## üìä ÁîüÊàêÁµêÊûú" >> $GITHUB_STEP_SUMMARY
          echo "- üåê **„Éë„Éé„É©„ÉûÁîªÂÉè**: $PANORAMA_COUNT „Éï„Ç°„Ç§„É´ (Imagen4 Ultra)" >> $GITHUB_STEP_SUMMARY
          echo "- üéµ **Èü≥Ê•Ω**: $MUSIC_COUNT „Éï„Ç°„Ç§„É´ (Google Lyria)" >> $GITHUB_STEP_SUMMARY
          echo "- üåê **3JS‰ΩìÈ®ì**: $([ "$THREEJS_READY" = true ] && echo "ÂÆåÊàê" || echo "Êú™ÂÆåÊàê")" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # „Éë„Éé„É©„ÉûÁîªÂÉè„Çí„Çµ„Éû„É™„Å´Ë°®Á§∫
          PANORAMA_FILE=$(find "$FOLDER_NAME/panorama" -name "*.jpg" -o -name "*.png" -o -name "*.jpeg" | head -1)
          if [ -n "$PANORAMA_FILE" ] && [ -f "$PANORAMA_FILE" ]; then
            GITHUB_PANORAMA_URL="https://github.com/${{ github.repository }}/raw/$BRANCH_NAME/$PANORAMA_FILE"
            echo "## üåê ÁîüÊàê„Åï„Çå„Åü„Éë„Éé„É©„ÉûÁîªÂÉè" >> $GITHUB_STEP_SUMMARY
            echo "![Generated Panorama]($GITHUB_PANORAMA_URL)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          # 3JS‰ΩìÈ®ì„ÅÆÊ°àÂÜÖ
          if [ "$THREEJS_READY" = true ]; then
            GITHUB_EXPERIENCE_URL="https://github.com/${{ github.repository }}/raw/$BRANCH_NAME/$FOLDER_NAME/3js-experience/index.html"
            echo "## üåê 3JS‰ΩìÈ®ì" >> $GITHUB_STEP_SUMMARY
            echo "üìÅ **‰ΩìÈ®ì„Éï„Ç°„Ç§„É´**: \`$FOLDER_NAME/3js-experience/index.html\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "‚ö†Ô∏è 3JS‰ΩìÈ®ì„ÅØÁõ¥Êé•Èñã„Åè„Åì„Å®„ÅØ„Åß„Åç„Åæ„Åõ„Çì„ÄÇ„Éó„É´„É™„ÇØ„Ç®„Çπ„Éà„Åß„Éï„Ç°„Ç§„É´„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„ÄÅ„É≠„Éº„Ç´„É´„ÅßÈñã„ÅÑ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "## üîó Ê¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó" >> $GITHUB_STEP_SUMMARY
          echo "1. „Éó„É´„É™„ÇØ„Ç®„Çπ„Éà„Åß3JS‰ΩìÈ®ì„ÇíÁ¢∫Ë™ç" >> $GITHUB_STEP_SUMMARY
          echo "2. index.html„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„Éñ„É©„Ç¶„Ç∂„ÅßÈñã„Åè" >> $GITHUB_STEP_SUMMARY
          echo "3. 360Â∫¶„Éë„Éé„É©„Éû‰ΩìÈ®ì„ÇíÊ•Ω„Åó„ÇÄ" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # „Éó„É´„É™„ÇØ„Ç®„Çπ„ÉàÁî®„ÅÆ„Éú„Éá„Ç£„Çí‰ΩúÊàê
          PR_BODY="üåê Claude Code SDK & kamuicode MCP„Çí‰ΩøÁî®„Åó„Å¶Ëá™ÂãïÁîüÊàê„Åï„Çå„Åü360Â∫¶„Éë„Éé„É©„Éû3JS‰ΩìÈ®ì„Åß„Åô„ÄÇ"
          PR_BODY="$PR_BODY"$'\n\n'"„Éë„Éé„É©„Éû„Ç∑„Éº„É≥: ${{ inputs.panorama_scene }}"
          PR_BODY="$PR_BODY"$'\n'"Èü≥Ê•Ω„Çπ„Çø„Ç§„É´: ${{ inputs.music_style }}"
          PR_BODY="$PR_BODY"$'\n\n'"ÁîüÊàê„Éï„É≠„Éº:"
          PR_BODY="$PR_BODY"$'\n'"1. üåê Imagen4 Ultra „Åß360Â∫¶„Éë„Éé„É©„ÉûÁîªÂÉèÁîüÊàê"
          PR_BODY="$PR_BODY"$'\n'"2. üéµ Google Lyria „ÅßÈü≥Ê•ΩÁîüÊàê"
          PR_BODY="$PR_BODY"$'\n'"3. üåê Three.js „ÅßÁµ±Âêà‰ΩìÈ®ìÊßãÁØâ"
          PR_BODY="$PR_BODY"$'\n\n'"ÊàêÊûúÁâ©:"
          PR_BODY="$PR_BODY"$'\n'"- „Éë„Éé„É©„ÉûÁîªÂÉè: $PANORAMA_COUNT „Éï„Ç°„Ç§„É´"
          PR_BODY="$PR_BODY"$'\n'"- Èü≥Ê•Ω: $MUSIC_COUNT „Éï„Ç°„Ç§„É´"
          PR_BODY="$PR_BODY"$'\n'"- 3JS‰ΩìÈ®ì: $([ "$THREEJS_READY" = true ] && echo "ÂÆåÊàê" || echo "Êú™ÂÆåÊàê")"
          
          # „Éë„Éé„É©„ÉûÁîªÂÉè„Çí„Éó„É´„É™„ÇØ„Å´Âüã„ÇÅËæº„Åø
          if [ -n "$PANORAMA_FILE" ] && [ -f "$PANORAMA_FILE" ]; then
            GITHUB_PANORAMA_URL="https://github.com/${{ github.repository }}/raw/$BRANCH_NAME/$PANORAMA_FILE"
            PR_BODY="$PR_BODY"$'\n\n'"## üåê ÁîüÊàê„Åï„Çå„Åü„Éë„Éé„É©„ÉûÁîªÂÉè"
            PR_BODY="$PR_BODY"$'\n'"![Generated Panorama]($GITHUB_PANORAMA_URL)"
          fi
          
          # 3JS‰ΩìÈ®ì„ÅÆÊ°àÂÜÖ
          if [ "$THREEJS_READY" = true ]; then
            PR_BODY="$PR_BODY"$'\n\n'"## üåê 3JS‰ΩìÈ®ì„ÅÆ‰Ωø„ÅÑÊñπ"
            PR_BODY="$PR_BODY"$'\n'"1. \`$FOLDER_NAME/3js-experience/index.html\` „Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ"
            PR_BODY="$PR_BODY"$'\n'"2. „Éñ„É©„Ç¶„Ç∂„ÅßÈñã„Åè"
            PR_BODY="$PR_BODY"$'\n'"3. „Éû„Ç¶„Çπ„ÇÑ„Çø„ÉÉ„ÉÅ„Åß360Â∫¶„Éë„Éé„É©„Éû„ÇíÊ•Ω„Åó„ÇÄ"
            PR_BODY="$PR_BODY"$'\n'"4. Èü≥Ê•Ω„Å®‰∏ÄÁ∑í„Å´Ê≤°ÂÖ•‰ΩìÈ®ì"
          fi
          
          PR_BODY="$PR_BODY

          ---
          üåê Generated with [Claude Code SDK & kamuicode MCP](https://github.com/AI-Summoner/ai-summoner)"
          
          # PR‰ΩúÊàê (GH_TOKEN„Çí‰ΩøÁî®)
          gh pr create \
            --title "Êñ∞„Åó„ÅÑ360¬∞ Panorama 3JS Experience: ${{ inputs.panorama_scene }}" \
            --body "$PR_BODY" \
            --base main \
            --head $BRANCH_NAME