name: 'Three.js Integration & Packaging'
description: 'Integrate and package Three.js experience for distribution'
author: 'KamuiCode Workflow'

inputs:
  experience-concept:
    description: 'The 3D experience concept'
    required: true
  include-music:
    description: 'Whether music was included'
    required: false
    default: 'false'
  folder-name:
    description: 'The folder name containing Three.js files'
    required: true
  branch-name:
    description: 'The branch to work on'
    required: true
  oauth-token:
    description: 'Claude Code OAuth token'
    required: true

outputs:
  integration-completed:
    description: 'Whether integration was completed successfully'
    value: ${{ steps.integration.outputs.completed }}
  final-package-path:
    description: 'Path to the final package'
    value: ${{ steps.integration.outputs.final-package-path }}
  package-size:
    description: 'Size of the final package'
    value: ${{ steps.integration.outputs.package-size }}

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch-name }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Claude Code SDK
      shell: bash
      run: npm install @anthropic-ai/claude-code
    
    - name: Three.js Integration & Packaging Agent
      id: integration
      shell: bash
      env:
        CLAUDE_CODE_OAUTH_TOKEN: ${{ inputs.oauth-token }}
      run: |
        echo "::group::📦 Three.js Integration & Packaging"
        echo "Starting at: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
        
        # 設定
        EXPERIENCE_CONCEPT="${{ inputs.experience-concept }}"
        INCLUDE_MUSIC="${{ inputs.include-music }}"
        FOLDER_NAME="${{ inputs.folder-name }}"
        SRC_DIR="$FOLDER_NAME/src"
        ASSETS_DIR="$FOLDER_NAME/assets"
        FINAL_DIR="$FOLDER_NAME/final"
        
        echo "Experience concept: $EXPERIENCE_CONCEPT"
        echo "Include music: $INCLUDE_MUSIC"
        echo "Source folder: $FOLDER_NAME"
        
        # finalディレクトリを作成
        mkdir -p "$FINAL_DIR"
        echo "📁 Created final directory: $FINAL_DIR"
        
        # 生成されたファイルの存在確認
        echo "🔍 Checking generated files..."
        if [ ! -d "$SRC_DIR" ]; then
          echo "::error::❌ Source directory not found: $SRC_DIR"
          exit 1
        fi
        
        if [ ! -f "$SRC_DIR/index.html" ]; then
          echo "::error::❌ Main HTML file not found: $SRC_DIR/index.html"
          exit 1
        fi
        
        # ファイル統計
        HTML_COUNT=$(find "$SRC_DIR" -name "*.html" | wc -l)
        JS_COUNT=$(find "$SRC_DIR" -name "*.js" | wc -l)
        CSS_COUNT=$(find "$SRC_DIR" -name "*.css" | wc -l)
        ASSET_COUNT=$(find "$ASSETS_DIR" -type f 2>/dev/null | wc -l)
        
        echo "📊 Generated files summary:"
        echo "  HTML files: $HTML_COUNT"
        echo "  JavaScript files: $JS_COUNT"  
        echo "  CSS files: $CSS_COUNT"
        echo "  Asset files: $ASSET_COUNT"
        
        # プロンプトの構築
        MUSIC_INFO=""
        if [ "$INCLUDE_MUSIC" == "true" ]; then
          MUSIC_INFO="- 音楽統合機能付き（BGMオン/オフ制御）"
        else
          MUSIC_INFO="- 音楽なし（パノラマ+パーティクルのみ）"
        fi
        
        PROMPT="Three.js体験の最終統合とパッケージングを実行してください。
        
        **体験コンセプト**: $EXPERIENCE_CONCEPT
        **音楽統合**: $INCLUDE_MUSIC
        $MUSIC_INFO
        
        **実行手順**:
        1. 生成されたファイルの品質チェック:
           - $SRC_DIR/index.htmlの構文確認
           - JavaScriptファイルの基本的な構文チェック
           - CSSファイルの妥当性確認
           - パノラマ画像のファイルサイズ確認
        
        2. READMEファイル作成($FOLDER_NAME/README.md):
           - 体験コンセプトの説明
           - 操作方法（マウス/タッチ操作）
           - 技術仕様（Three.js, WebGL要件）
           - ローカル実行方法
           - 対応ブラウザ情報
           - トラブルシューティング
        
        3. パフォーマンス最適化:
           - 画像ファイルサイズの確認
           - 不要なファイルの削除
           - HTMLのminification確認
        
        4. 最終パッケージ作成:
           - $FINAL_DIR/threejs-experience.zipに全ファイルを圧縮
           - アーカイブ内容の確認
           - ファイルサイズの記録
        
        **品質チェック項目**:
        - WebGL対応チェックの実装確認
        - レスポンシブデザインの実装確認
        - エラーハンドリングの実装確認
        - パフォーマンス最適化の実装確認
        - ブラウザ互換性の確認
        
        **最終成果物**:
        - 完全動作するThree.js体験
        - 詳細なREADME文書
        - 配布用zipパッケージ
        - 品質チェックレポート
        
        **重要な注意点**:
        - すべてのファイルパスが相対パスで正しく設定されているか確認
        - 外部依存関係の確認（CDNリンクなど）
        - モバイルデバイスでの動作確認要件の記載
        - セキュリティベストプラクティスの確認"
        
        echo "🚀 Starting Integration & Packaging Agent..."
        echo "📝 Prompt length: ${#PROMPT}"
        
        # Claude Code CLIの実行
        npx @anthropic-ai/claude-code \
          --allowedTools "Bash" \
          --max-turns 25 \
          --verbose \
          --permission-mode "acceptEdits" \
          -p "$PROMPT" || {
            echo "::error::❌ Claude Code CLI execution failed"
            exit 1
          }
        
        # 最終結果の確認
        echo ""
        echo "📦 Checking final package..."
        
        # READMEファイルの確認
        if [ -f "$FOLDER_NAME/README.md" ]; then
          echo "✅ README file created: $FOLDER_NAME/README.md"
          README_SIZE=$(wc -c < "$FOLDER_NAME/README.md")
          echo "  README size: $README_SIZE bytes"
        else
          echo "::warning::⚠️ README file not found"
        fi
        
        # zipパッケージの確認
        ZIP_PATH="$FINAL_DIR/threejs-experience.zip"
        if [ -f "$ZIP_PATH" ]; then
          echo "✅ Final package created: $ZIP_PATH"
          PACKAGE_SIZE=$(wc -c < "$ZIP_PATH")
          PACKAGE_SIZE_MB=$((PACKAGE_SIZE / 1024 / 1024))
          echo "  Package size: $PACKAGE_SIZE bytes ($PACKAGE_SIZE_MB MB)"
          echo "final-package-path=$ZIP_PATH" >> $GITHUB_OUTPUT
          echo "package-size=${PACKAGE_SIZE_MB}MB" >> $GITHUB_OUTPUT
        else
          echo "::error::❌ Final package not found"
          exit 1
        fi
        
        # 全体サマリー
        TOTAL_FILES=$(find "$FOLDER_NAME" -type f | wc -l)
        echo ""
        echo "🎉 Integration completed successfully!"
        echo "  Total files: $TOTAL_FILES"
        echo "  Final package: $ZIP_PATH"
        echo "  Package size: ${PACKAGE_SIZE_MB}MB"
        
        echo "completed=true" >> $GITHUB_OUTPUT
        echo "::endgroup::"
    
    - name: Setup docs folder for GitHub Pages
      shell: bash
      run: |
        echo "::group::📁 Setup docs folder"
        
        FOLDER_NAME="${{ inputs.folder-name }}"
        DOCS_DIR="docs/$FOLDER_NAME"
        
        # docs/フォルダ構造を作成
        mkdir -p "$DOCS_DIR"
        
        # src/index.htmlをdocs配下にコピー
        if [ -f "$FOLDER_NAME/src/index.html" ]; then
          cp "$FOLDER_NAME/src/index.html" "$DOCS_DIR/"
          echo "✅ Copied index.html to docs"
        fi
        
        # パノラマ画像をコピー
        if [ -f "$FOLDER_NAME/src/panorama.jpg" ]; then
          cp "$FOLDER_NAME/src/panorama.jpg" "$DOCS_DIR/"
          echo "✅ Copied panorama.jpg to docs"
        fi
        
        # 音楽ファイルがあればコピー
        if [ -f "$FOLDER_NAME/src/generated-music.wav" ]; then
          cp "$FOLDER_NAME/src/generated-music.wav" "$DOCS_DIR/"
          echo "✅ Copied music file to docs"
        fi
        
        # GitHub Pages用のindex.htmlがなければ作成
        if [ ! -f "docs/index.html" ]; then
          cat > docs/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
          <title>KamuiCode Three.js Experiences</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            .experience { margin: 20px 0; padding: 20px; border: 1px solid #ddd; border-radius: 8px; }
            .experience h2 { margin-top: 0; }
            .experience a { color: #0066cc; text-decoration: none; }
            .experience a:hover { text-decoration: underline; }
          </style>
        </head>
        <body>
          <h1>🎯 KamuiCode Three.js Experiences</h1>
          <p>Generated 3D experiences with panorama backgrounds and particle effects.</p>
          <div id="experiences">
            <!-- Experiences will be listed here -->
          </div>
        </body>
        </html>
        EOF
          echo "✅ Created main docs/index.html"
        fi
        
        echo "::endgroup::"
    
    - name: Commit and push integration files
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # フォルダとdocsディレクトリを追加
        git add ${{ inputs.folder-name }}/
        git add docs/
        
        if git diff --cached --quiet; then
          echo "No integration files to commit"
        else
          git commit -m "Add final Three.js experience package: ${{ inputs.experience-concept }}"
          git push origin ${{ inputs.branch-name }}
        fi