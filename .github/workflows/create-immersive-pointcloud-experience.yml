name: 'Create Immersive Pointcloud Experience'

on:
  workflow_dispatch:
    inputs:
      image-source:
        description: '画像ソース'
        required: true
        type: choice
        options:
          - 'ai-generated'
          - 'uploaded-image'
        default: 'ai-generated'
      
      image-prompt:
        description: '生成する画像の詳細なプロンプト（AI生成選択時）'
        required: false
        type: string
        default: 'A magnificent rose garden with blooming roses in various colors, beautiful pink and red roses, garden paths winding through rose bushes, romantic atmosphere with depth and spatial beauty'
      
      uploaded-image-url:
        description: 'Issue添付画像のURL（アップロード選択時）'
        required: false
        type: string
        default: ''
      
      image-model:
        description: '画像生成モデル'
        required: false
        type: choice
        options:
          - 'auto'
          - 'imagen4-ultra'
          - 'imagen4-fast'
          - 'imagen3'
          - 'flux-schnell'
          - 'photo-flux'
        default: 'imagen4-ultra'
      
      music-prompt:
        description: '背景音楽のプロンプト（オプション）'
        required: false
        type: string
        default: 'Beautiful music box melody, romantic and nostalgic, gentle chimes, delicate and dreamy atmosphere for rose garden'
      
      enable-music:
        description: '背景音楽を生成する'
        required: false
        type: boolean
        default: true
      
      color-mode:
        description: 'カラーモード'
        required: false
        type: choice
        options:
          - 'color'
          - 'monochrome'
          - 'sepia'
        default: 'color'
      
      background-style:
        description: '背景スタイル'
        required: false
        type: choice
        options:
          - 'solid-black'
          - 'solid-dark-gray'
          - 'dark-blue'
          - 'gradient-dark'
          - 'gradient-cosmic'
        default: 'solid-black'
      
      depth-model:
        description: '深度推定モデル'
        required: false
        type: choice
        options:
          - 'midas_v21_small'
          - 'midas_v21'
        default: 'midas_v21'
      
      depth-enhancement:
        description: '深度強調レベル'
        required: false
        type: choice
        options:
          - 'auto'      # AIが自動判断
          - 'normal'    # 標準の深度
          - 'enhanced'  # 強調された深度
        default: 'auto'
      

permissions:
  contents: write

jobs:
  create-immersive-experience:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: 🏗️ Setup Branch
        id: setup
        uses: ./.github/actions/kamui-modules/setup-branch
        env:
          BRANCH_PREFIX: "immersive-pointcloud"
      
      - name: Translate Image Prompt to English
        id: image-translation
        if: inputs.image-source == 'ai-generated'
        uses: ./.github/actions/kamui-modules/prompt-translation
        with:
          japanese-prompt: ${{ inputs.image-prompt }}
          oauth-token: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
      
      - name: Generate Image with AI
        id: image-generation
        if: inputs.image-source == 'ai-generated'
        uses: ./.github/actions/kamui-modules/image-generation
        with:
          image-prompt: ${{ steps.image-translation.outputs.english-prompt }}
          image-model: ${{ inputs.image-model }}
          folder-name: '${{ steps.setup.outputs.folder-name }}'
          branch-name: '${{ steps.setup.outputs.branch-name }}'
          oauth-token: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          mcp-config: ${{ secrets.MCP_CONFIG }}
      
      - name: Upload Image from URL
        id: image-upload
        if: inputs.image-source == 'uploaded-image'
        uses: ./.github/actions/kamui-modules/image-upload
        with:
          image-url: ${{ inputs.uploaded-image-url }}
          output-folder: '${{ steps.setup.outputs.folder-name }}'
          branch-name: '${{ steps.setup.outputs.branch-name }}'
      
      - name: Set image path for downstream steps
        id: image-path
        run: |
          if [ "${{ inputs.image-source }}" = "ai-generated" ]; then
            echo "path=${{ steps.setup.outputs.folder-name }}/images/generated-image.png" >> $GITHUB_OUTPUT
          else
            echo "path=${{ steps.image-upload.outputs.image-path }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Translate Music Prompt to English
        id: music-translation
        if: inputs.enable-music == true
        uses: ./.github/actions/kamui-modules/prompt-translation
        with:
          japanese-prompt: ${{ inputs.music-prompt }}
          oauth-token: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
      
      - name: Generate Background Music (Optional)
        id: music
        if: inputs.enable-music == true
        uses: ./.github/actions/kamui-modules/music-generation
        with:
          music-concept: ${{ steps.music-translation.outputs.english-prompt }}
          music-prompt: ${{ steps.music-translation.outputs.english-prompt }}
          folder-name: '${{ steps.setup.outputs.folder-name }}'
          branch-name: '${{ steps.setup.outputs.branch-name }}'
          oauth-token: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          mcp-config: ${{ secrets.MCP_CONFIG }}
      
      - name: Save music path
        id: save-music
        if: inputs.enable-music == true
        run: |
          # Find the generated music (avoiding duplicated paths)
          MUSIC_FILE=$(find ${{ steps.setup.outputs.folder-name }} -name "*.wav" -o -name "*.mp3" | head -1)
          if [ -n "$MUSIC_FILE" ]; then
            # Clean up duplicated path segments
            CLEAN_MUSIC_FILE=$(echo "$MUSIC_FILE" | sed 's|immersive-pointcloud-[0-9]\{8\}-[0-9]\{6\}/music/immersive-pointcloud-[0-9]\{8\}-[0-9]\{6\}/music/|${{ steps.setup.outputs.folder-name }}/music/|g')
            
            # If the cleaned path is different, move the file to correct location
            if [ "$MUSIC_FILE" != "$CLEAN_MUSIC_FILE" ]; then
              echo "🔧 Fixing duplicated music path..."
              echo "Original: $MUSIC_FILE"
              echo "Fixed: $CLEAN_MUSIC_FILE"
              mkdir -p "$(dirname "$CLEAN_MUSIC_FILE")"
              mv "$MUSIC_FILE" "$CLEAN_MUSIC_FILE"
              MUSIC_FILE="$CLEAN_MUSIC_FILE"
            fi
            
            echo "music-path=$MUSIC_FILE" >> $GITHUB_OUTPUT
            echo "music-completed=true" >> $GITHUB_OUTPUT
            echo "✅ Generated music: $MUSIC_FILE"
          else
            echo "music-completed=false" >> $GITHUB_OUTPUT
            echo "⚠️ Music generation skipped or failed"
          fi
      
      - name: Generate 3D Point Cloud
        id: pointcloud
        uses: ./.github/actions/kamui-modules/pointcloud-generation
        with:
          input-image-path: ${{ steps.image-path.outputs.path }}
          output-folder: '${{ steps.setup.outputs.folder-name }}'
          branch-name: '${{ steps.setup.outputs.branch-name }}'
          depth-model: ${{ inputs.depth-model }}
          color-mode: ${{ inputs.color-mode }}
      
      - name: Set background color
        id: bg-color
        run: |
          case "${{ inputs.background-style }}" in
            "solid-black")
              echo "color=#000000" >> $GITHUB_OUTPUT
              ;;
            "solid-dark-gray")
              echo "color=#222222" >> $GITHUB_OUTPUT
              ;;
            "dark-blue")
              echo "color=#0a0a2a" >> $GITHUB_OUTPUT
              ;;
            "gradient-dark")
              echo "color=#1a1a1a" >> $GITHUB_OUTPUT
              ;;
            "gradient-cosmic")
              echo "color=#0a0a2a" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "color=#000000" >> $GITHUB_OUTPUT
              ;;
          esac
      
      - name: Create Enhanced Three.js Viewer
        id: viewer
        uses: ./.github/actions/kamui-modules/threejs-pointcloud-viewer
        with:
          ply-file-path: ${{ steps.pointcloud.outputs.ply-file-path }}
          output-folder: 'docs/${{ steps.setup.outputs.folder-name }}'
          viewer-title: 'Immersive 3D Point Cloud Experience'
          camera-position: '0,0,150'
          background-color: ${{ steps.bg-color.outputs.color }}
          point-size: '1.5'
          animation-speed: '1.0'
          music-file: ${{ inputs.enable-music == true && steps.save-music.outputs.music-path || '' }}
          branch-name: '${{ steps.setup.outputs.branch-name }}'
      
      - name: 📦 Upload Production Artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: |
            docs/${{ steps.setup.outputs.folder-name }}/
          retention-days: 7
      
      - name: Experience Summary
        run: |
          echo "## 🎨 Immersive Pointcloud Experience Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Image Source**: ${{ inputs.image-source }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.image-source }}" = "ai-generated" ]; then
            echo "- **Image Prompt (Original)**: ${{ inputs.image-prompt }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Image Prompt (English)**: ${{ steps.image-translation.outputs.english-prompt }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Image Model**: ${{ inputs.image-model }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Uploaded Image URL**: ${{ inputs.uploaded-image-url }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Music Enabled**: ${{ inputs.enable-music }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.enable-music }}" = "true" ]; then
            echo "- **Music Prompt (Original)**: ${{ inputs.music-prompt }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Music Prompt (English)**: ${{ steps.music-translation.outputs.english-prompt }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Color Mode**: ${{ inputs.color-mode }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Background Style**: ${{ inputs.background-style }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Results" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.image-source }}" = "ai-generated" ]; then
            echo "- **Image Generated**: ${{ steps.image-generation.outputs.image-completed }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Image Uploaded**: ${{ steps.image-upload.outputs.upload-completed }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Music Generated**: ${{ steps.save-music.outputs.music-completed || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Pointcloud Generated**: ${{ steps.pointcloud.outputs.pointcloud-completed }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Viewer Created**: ${{ steps.viewer.outputs.viewer-completed }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Artifact" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Status**: Successfully uploaded as artifact for Pages deployment" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **Expected URL**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/immersive-pointcloud-experience-$(date +%Y%m%d)-${{ github.run_id }}/" >> $GITHUB_STEP_SUMMARY
          echo "📁 **Artifact**: immersive-pointcloud-experience-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY