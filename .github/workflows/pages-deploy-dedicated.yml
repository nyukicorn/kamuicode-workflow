name: 🚀 Deploy to GitHub Pages

on:
  workflow_run:
    workflows:
      - "🧪 2D→3D Regression Test"
      - "Create Immersive Pointcloud Experience"
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      run_id:
        description: "Source workflow run ID (manual only)"
        required: false
        default: ""

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  deploy-pages:
    runs-on: ubuntu-latest
    if: >
      ${{
        github.event_name == 'workflow_dispatch' ||
        github.event.workflow_run.conclusion == 'success'
      }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # 1) この Run の artifact だけ取得
      - name: 📥 Download Pages Artifact
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.inputs.run_id || github.event.workflow_run.id }}
          name: github-pages           # 各ビルド WF で同名に統一して upload
          path: downloaded-artifacts

      # 2) pages-content 組み立て
      - name: 🛠 Prepare pages-content
        run: |
          set -euo pipefail

          TODAY=$(date +%Y%m%d)
          RUN_ID="${{ github.event.inputs.run_id || github.event.workflow_run.id }}"
          WF_NAME="${{ github.event.workflow_run.name || 'manual-deploy' }}"

          # slug 化（絵文字除去・lowercase・連続ハイフン整形）
          SLUG=$(echo "$WF_NAME" \
            | sed 's/[🧪🚀📁]//g; s/[^a-zA-Z0-9-]/-/g; s/--*/-/g; s/^-//; s/-$//' \
            | tr '[:upper:]' '[:lower:]')
          VERSIONED_FOLDER="${SLUG}-${TODAY}-${RUN_ID}"

          mkdir -p pages-content
          mkdir -p "pages-content/$VERSIONED_FOLDER"
          cp -R downloaded-artifacts/. "pages-content/$VERSIONED_FOLDER/"

          # ルート index.html → 最新へリダイレクト
          cat <<EOF > pages-content/index.html
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>Latest Deployment - $WF_NAME</title>
            <meta http-equiv="refresh" content="0; url=./$VERSIONED_FOLDER/">
          </head>
          <body>
            <p>Redirecting to latest deployment:
               <a href="./$VERSIONED_FOLDER/">$VERSIONED_FOLDER</a></p>
          </body>
          </html>
          EOF

          # リセット完了マーカー（累積の目印）
          echo "reset done at $(date -u)" > pages-content/.post-reset

          echo "=== DEBUG: Final Structure ==="
          find pages-content -maxdepth 3 -type f -name index.html | sed 's/^/  /'
          echo "=== SIZE REPORT ==="
          du -sh pages-content | sed 's/^/  /'
          echo "Files: $(find pages-content -type f | wc -l)"

      # 3) 最低限の index.html があるかチェック
      - name: ✅ Existence Check
        run: |
          if ! find pages-content -maxdepth 3 -name index.html | grep -q .; then
            echo "no index.html found in pages-content"
            exit 1
          fi

      # 4) Pages 用 artifact にまとめる
      - name: 📦 Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages-content/

      # 5) GitHub Pages へデプロイ
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4