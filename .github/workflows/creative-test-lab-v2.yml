name: Creative Test Lab v2

on:
  workflow_dispatch:
    inputs:
      experiment_description:
        description: '‰ªäÊó•Ë©¶„Åó„Åü„ÅÑ„Åì„Å®Ôºà‰æãÔºöÊñ∞„Åó„ÅÑÈü≥Ê•ΩMCP + ÁîªÂÉè„ÅßÂãïÁîª‰ΩúÊàêÔºâ'
        required: true
        type: string
      
      mcp_to_test:
        description: '„ÉÜ„Çπ„Éà„Åó„Åü„ÅÑMCPÔºà‰ªªÊÑèÔºâ'
        required: false
        type: string
        default: 'auto-detect'
      
      output_type:
        description: 'ÊúüÂæÖ„Åô„Çã„Ç¢„Ç¶„Éà„Éó„ÉÉ„Éà'
        type: choice
        options:
          - 'auto-detect'
          - 'image'
          - 'video' 
          - 'music'
          - 'threejs-scene'
          - 'mixed-media'
        default: 'auto-detect'
      
      quick_notes:
        description: 'ËøΩÂä†„É°„É¢Ôºà‰ªªÊÑèÔºâ'
        required: false
        type: string

jobs:
  run-experiment:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup experiment
        id: setup
        run: |
          # ÂÆüÈ®ìÁî®„ÅÆ‰∏ÄÊÑè„Å™ID„Å®„Éá„Ç£„É¨„ÇØ„Éà„É™„Çí‰ΩúÊàê
          EXPERIMENT_ID="exp-$(date +%Y%m%d-%H%M%S)"
          EXPERIMENT_DIR="experiment-results/${EXPERIMENT_ID}"
          
          mkdir -p "$EXPERIMENT_DIR"/{output,logs,config}
          
          echo "experiment-id=$EXPERIMENT_ID" >> $GITHUB_OUTPUT
          echo "experiment-dir=$EXPERIMENT_DIR" >> $GITHUB_OUTPUT
          
          echo "üß™ ÂÆüÈ®ìÈñãÂßã: $EXPERIMENT_ID"
      
      - name: Prepare MCP configuration
        env:
          MCP_CONFIG: ${{ secrets.MCP_CONFIG }}
        run: |
          EXPERIMENT_DIR="${{ steps.setup.outputs.experiment-dir }}"
          
          # MCPË®≠ÂÆö„Çí„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó
          if [ -n "$MCP_CONFIG" ]; then
            echo "$MCP_CONFIG" > "$EXPERIMENT_DIR/config/mcp-config.json"
          else
            echo '{"mcpServers":{}}' > "$EXPERIMENT_DIR/config/mcp-config.json"
          fi
      
      - name: Run experiment
        env:
          CLAUDE_ACCESS_TOKEN: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          CLAUDE_REFRESH_TOKEN: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
          CLAUDE_EXPIRES_AT: ${{ secrets.CLAUDE_EXPIRES_AT }}
        run: |
          EXPERIMENT_DIR="${{ steps.setup.outputs.experiment-dir }}"
          
          echo "üöÄ ÂÆüÈ®ìÂÆüË°å‰∏≠..."
          
          # ÂÆüÈ®ìÊåáÁ§∫„Çí„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò
          echo "ÂÆüÈ®ìÂÜÖÂÆπ: ${{ inputs.experiment_description }}" > "$EXPERIMENT_DIR/instructions.txt"
          echo "ÊúüÂæÖ„Åô„Çã„Ç¢„Ç¶„Éà„Éó„ÉÉ„Éà: ${{ inputs.output_type }}" >> "$EXPERIMENT_DIR/instructions.txt"
          echo "MCP: ${{ inputs.mcp_to_test }}" >> "$EXPERIMENT_DIR/instructions.txt"
          
          # Claude Code„ÇíÂÆüË°åÔºà„Ç∑„É≥„Éó„É´„Å™„Ç≥„Éû„É≥„ÉâÔºâ
          npx claude-code --non-interactive \
            --mcp-config="$EXPERIMENT_DIR/config/mcp-config.json" \
            --message="ÂÆüÈ®ì„ÇíÂÆüË°å: ${{ inputs.experiment_description }}" \
            > "$EXPERIMENT_DIR/logs/output.log" 2>&1 || true
          
          echo "‚úÖ ÂÆüÈ®ìÂÆå‰∫Ü"
      
      - name: Save results
        run: |
          EXPERIMENT_ID="${{ steps.setup.outputs.experiment-id }}"
          EXPERIMENT_DIR="${{ steps.setup.outputs.experiment-dir }}"
          
          # ÁµêÊûú„ÅÆ„Çµ„Éû„É™„Éº„Çí‰ΩúÊàê
          echo "# ÂÆüÈ®ìÁµêÊûú: $EXPERIMENT_ID" > "$EXPERIMENT_DIR/README.md"
          echo "- ÂÆüÈ®ìÂÜÖÂÆπ: ${{ inputs.experiment_description }}" >> "$EXPERIMENT_DIR/README.md"
          echo "- ÂÆüË°åÊó•ÊôÇ: $(date)" >> "$EXPERIMENT_DIR/README.md"
          
          # ÁµêÊûú„Çí„Ç≥„Éü„ÉÉ„Éà
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add experiment-results/
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add experiment results: $EXPERIMENT_ID"
            git push
          fi