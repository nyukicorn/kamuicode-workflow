name: 'üåê Panorama Quality Comparison Test'
# A/B test to compare specialized panorama viewer vs generic three.js generation

on:
  workflow_dispatch:
    inputs:
      test_panorama_image:
        description: '„ÉÜ„Çπ„ÉàÁî®„Éë„Éé„É©„ÉûÁîªÂÉè„Éë„Çπ'
        required: false
        default: 'threejs-experience-20250719-16385462254/src/panorama.jpg'
      
      test_description:
        description: '„ÉÜ„Çπ„ÉàË™¨Êòé'
        required: false
        default: 'Panorama viewer quality comparison test'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  panorama-quality-comparison:
    name: 'Compare Panorama Rendering Quality'
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        
      - name: ‚úÖ Verify Test Image Exists
        run: |
          echo "üîç Checking test panorama image: ${{ github.event.inputs.test_panorama_image }}"
          if [[ -f "${{ github.event.inputs.test_panorama_image }}" ]]; then
            echo "‚úÖ Test image found: ${{ github.event.inputs.test_panorama_image }}"
            ls -la "${{ github.event.inputs.test_panorama_image }}"
            
            # Check image dimensions
            if command -v identify >/dev/null 2>&1; then
              DIMENSIONS=$(identify -format "%wx%h" "${{ github.event.inputs.test_panorama_image }}")
              echo "üìê Image dimensions: $DIMENSIONS"
            else
              echo "‚ÑπÔ∏è  ImageMagick not available for dimension check"
            fi
          else
            echo "‚ùå Test image not found: ${{ github.event.inputs.test_panorama_image }}"
            echo "Available panorama images:"
            find . -name "panorama.jpg" | head -5
            exit 1
          fi
          
      - name: üìÅ Setup Test Output Directories
        run: |
          mkdir -p test-comparison/method-a-specialized
          mkdir -p test-comparison/method-b-generic
          mkdir -p docs/test-comparison
          echo "‚úÖ Test directories created"

      # Method A: Specialized threejs-panorama-viewer
      - name: üÖ∞Ô∏è Test Method A - Specialized Panorama Viewer
        id: method_a
        uses: ./.github/actions/kamui-modules/threejs-panorama-viewer
        with:
          input_image: ${{ github.event.inputs.test_panorama_image }}
          output_filename: 'test-comparison/method-a-specialized/panorama-viewer.html'
          background_color: '#000814'
          camera_position_radius: '200'
          particle_density: 'medium'
          auto_rotate: 'true'
          rotation_speed: '1.0'
          enable_depth_visualization: 'false'
          enable_music: 'false'

      # Method B: Generic threejs-generation (simulated)
      - name: üÖ±Ô∏è Test Method B - Generic Three.js Generation
        id: method_b
        run: |
          echo "üõ†Ô∏è Creating generic Three.js panorama implementation..."
          
          # Create a simple Three.js panorama viewer using standard approach
          cat > test-comparison/method-b-generic/panorama-viewer.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Method B - Generic Three.js Panorama</title>
              <style>
                  body { margin: 0; overflow: hidden; background: #000814; }
                  canvas { display: block; }
                  .controls {
                      position: absolute;
                      top: 20px;
                      left: 20px;
                      color: white;
                      font-family: Arial, sans-serif;
                      background: rgba(0,0,0,0.7);
                      padding: 15px;
                      border-radius: 8px;
                  }
                  .method-label {
                      position: absolute;
                      top: 20px;
                      right: 20px;
                      color: #00ff88;
                      font-family: Arial, sans-serif;
                      font-weight: bold;
                      background: rgba(0,0,0,0.8);
                      padding: 10px;
                      border-radius: 5px;
                  }
              </style>
          </head>
          <body>
              <div class="method-label">Method B: Generic Three.js</div>
              <div class="controls">
                  <h3>üåê Generic Panorama</h3>
                  <p>‚Ä¢ Standard sphere mapping</p>
                  <p>‚Ä¢ Basic camera controls</p>
                  <p>‚Ä¢ Simple texture application</p>
                  <p><small>Drag to rotate | Scroll to zoom</small></p>
              </div>
              
              <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
              <script>
                  // Basic Three.js panorama implementation
                  let scene, camera, renderer, sphere;
                  let mouse = { x: 0, y: 0 };
                  let mouseDown = false;
                  
                  function init() {
                      // Scene setup
                      scene = new THREE.Scene();
                      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
                      renderer = new THREE.WebGLRenderer({ antialias: true });
                      renderer.setSize(window.innerWidth, window.innerHeight);
                      renderer.setClearColor(0x000814);
                      document.body.appendChild(renderer.domElement);
                      
                      // Create sphere geometry for panorama
                      const geometry = new THREE.SphereGeometry(200, 32, 16);
                      
                      // Load panorama texture
                      const loader = new THREE.TextureLoader();
                      loader.load('../../../${{ github.event.inputs.test_panorama_image }}', function(texture) {
                          const material = new THREE.MeshBasicMaterial({ 
                              map: texture,
                              side: THREE.BackSide  // Render inside of sphere
                          });
                          
                          sphere = new THREE.Mesh(geometry, material);
                          scene.add(sphere);
                      });
                      
                      // Camera position
                      camera.position.set(0, 0, 0);
                      
                      // Mouse controls
                      setupControls();
                      
                      // Start render loop
                      animate();
                  }
                  
                  function setupControls() {
                      renderer.domElement.addEventListener('mousedown', onMouseDown);
                      renderer.domElement.addEventListener('mousemove', onMouseMove);
                      renderer.domElement.addEventListener('mouseup', onMouseUp);
                      renderer.domElement.addEventListener('wheel', onWheel);
                  }
                  
                  function onMouseDown(event) {
                      mouseDown = true;
                      mouse.x = event.clientX;
                      mouse.y = event.clientY;
                  }
                  
                  function onMouseMove(event) {
                      if (!mouseDown) return;
                      
                      const deltaX = event.clientX - mouse.x;
                      const deltaY = event.clientY - mouse.y;
                      
                      camera.rotation.y += deltaX * 0.005;
                      camera.rotation.x += deltaY * 0.005;
                      
                      // Limit vertical rotation
                      camera.rotation.x = Math.max(-Math.PI/2, Math.min(Math.PI/2, camera.rotation.x));
                      
                      mouse.x = event.clientX;
                      mouse.y = event.clientY;
                  }
                  
                  function onMouseUp() {
                      mouseDown = false;
                  }
                  
                  function onWheel(event) {
                      camera.fov += event.deltaY * 0.05;
                      camera.fov = Math.max(10, Math.min(75, camera.fov));
                      camera.updateProjectionMatrix();
                  }
                  
                  function animate() {
                      requestAnimationFrame(animate);
                      
                      // Simple auto-rotation
                      if (sphere && !mouseDown) {
                          camera.rotation.y += 0.002;
                      }
                      
                      renderer.render(scene, camera);
                  }
                  
                  // Handle window resize
                  window.addEventListener('resize', function() {
                      camera.aspect = window.innerWidth / window.innerHeight;
                      camera.updateProjectionMatrix();
                      renderer.setSize(window.innerWidth, window.innerHeight);
                  });
                  
                  // Initialize
                  init();
              </script>
          </body>
          </html>
          EOF
          
          echo "‚úÖ Generic Three.js panorama viewer created"

      - name: üìä Copy Test Assets
        run: |
          # Copy panorama image to both test directories
          cp "${{ github.event.inputs.test_panorama_image }}" test-comparison/method-a-specialized/
          cp "${{ github.event.inputs.test_panorama_image }}" test-comparison/method-b-generic/
          
          # Copy specialized viewer assets if they exist
          if [ -f "panorama-script.js" ]; then
            cp panorama-script.js test-comparison/method-a-specialized/
          fi
          
          echo "‚úÖ Test assets copied"

      - name: üåê Setup Comparison Page
        run: |
          cat > docs/test-comparison/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>üåê Panorama Quality Comparison</title>
              <style>
                  body {
                      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                      margin: 0;
                      padding: 20px;
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      color: white;
                  }
                  .header {
                      text-align: center;
                      margin-bottom: 30px;
                  }
                  .comparison-container {
                      display: flex;
                      gap: 20px;
                      max-width: 1400px;
                      margin: 0 auto;
                  }
                  .method-card {
                      flex: 1;
                      background: rgba(255, 255, 255, 0.1);
                      border-radius: 12px;
                      padding: 20px;
                      backdrop-filter: blur(10px);
                  }
                  .method-title {
                      font-size: 1.5em;
                      margin-bottom: 15px;
                      text-align: center;
                  }
                  .viewer-frame {
                      width: 100%;
                      height: 400px;
                      border: none;
                      border-radius: 8px;
                      background: #000;
                  }
                  .features {
                      margin-top: 15px;
                      font-size: 0.9em;
                  }
                  .features li {
                      margin: 5px 0;
                  }
                  .test-info {
                      background: rgba(0, 0, 0, 0.3);
                      padding: 15px;
                      border-radius: 8px;
                      margin-bottom: 20px;
                  }
                  @media (max-width: 768px) {
                      .comparison-container {
                          flex-direction: column;
                      }
                  }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>üåê Panorama Quality Comparison Test</h1>
                  <p>Side-by-side comparison of panorama rendering methods</p>
              </div>
              
              <div class="test-info">
                  <h3>üìã Test Information</h3>
                  <p><strong>Test Image:</strong> ${{ github.event.inputs.test_panorama_image }}</p>
                  <p><strong>Description:</strong> ${{ github.event.inputs.test_description }}</p>
                  <p><strong>Generated:</strong> $(date)</p>
              </div>
              
              <div class="comparison-container">
                  <div class="method-card">
                      <h2 class="method-title">üÖ∞Ô∏è Method A: Specialized Viewer</h2>
                      <iframe src="../../test-comparison/method-a-specialized/panorama-viewer.html" 
                              class="viewer-frame" 
                              title="Method A - Specialized Panorama Viewer"></iframe>
                      <ul class="features">
                          <li>‚úÖ Panorama-specific optimizations</li>
                          <li>‚úÖ Seamline continuity handling</li>
                          <li>‚úÖ Pole compression</li>
                          <li>‚úÖ Specialized camera controls</li>
                      </ul>
                  </div>
                  
                  <div class="method-card">
                      <h2 class="method-title">üÖ±Ô∏è Method B: Generic Three.js</h2>
                      <iframe src="../../test-comparison/method-b-generic/panorama-viewer.html" 
                              class="viewer-frame" 
                              title="Method B - Generic Three.js Panorama"></iframe>
                      <ul class="features">
                          <li>üìã Standard sphere mapping</li>
                          <li>üìã Basic texture application</li>
                          <li>üìã Simple camera controls</li>
                          <li>üìã No panorama-specific optimizations</li>
                      </ul>
                  </div>
              </div>
              
              <div style="text-align: center; margin-top: 30px;">
                  <h3>üîç What to Compare</h3>
                  <p>‚Ä¢ <strong>Seamlines:</strong> Check left-right edge continuity</p>
                  <p>‚Ä¢ <strong>Distortion:</strong> Look for image stretching or warping</p>
                  <p>‚Ä¢ <strong>Controls:</strong> Test mouse/touch navigation smoothness</p>
                  <p>‚Ä¢ <strong>Performance:</strong> Loading speed and frame rate</p>
              </div>
          </body>
          </html>
          EOF
          
          echo "‚úÖ Comparison page created"

      - name: üì¶ Copy Test Results to Docs
        run: |
          # Copy both test implementations to docs for GitHub Pages
          cp -r test-comparison/ docs/
          
          echo "‚úÖ Test results copied to docs for GitHub Pages"

      - name: üìä Generate Test Report
        run: |
          echo "# üåê Panorama Quality Comparison Test Results" > test-comparison/comparison-report.md
          echo "" >> test-comparison/comparison-report.md
          echo "## Test Configuration" >> test-comparison/comparison-report.md
          echo "- **Test Image**: \`${{ github.event.inputs.test_panorama_image }}\`" >> test-comparison/comparison-report.md
          echo "- **Test Description**: ${{ github.event.inputs.test_description }}" >> test-comparison/comparison-report.md
          echo "- **Generated**: $(date)" >> test-comparison/comparison-report.md
          echo "" >> test-comparison/comparison-report.md
          echo "## Method A: Specialized threejs-panorama-viewer" >> test-comparison/comparison-report.md
          echo "- ‚úÖ Uses dedicated panorama viewer module" >> test-comparison/comparison-report.md
          echo "- ‚úÖ Includes panorama-specific optimizations" >> test-comparison/comparison-report.md
          echo "- ‚úÖ Specialized camera controls and interactions" >> test-comparison/comparison-report.md
          echo "" >> test-comparison/comparison-report.md
          echo "## Method B: Generic Three.js Implementation" >> test-comparison/comparison-report.md
          echo "- üìã Standard Three.js sphere geometry" >> test-comparison/comparison-report.md
          echo "- üìã Basic texture mapping approach" >> test-comparison/comparison-report.md
          echo "- üìã Simple mouse/camera controls" >> test-comparison/comparison-report.md
          echo "" >> test-comparison/comparison-report.md
          echo "## üåê Live Comparison" >> test-comparison/comparison-report.md
          echo "View the side-by-side comparison at: [Comparison Page](https://$(echo ${{ github.repository }} | cut -d'/' -f1).github.io/$(echo ${{ github.repository }} | cut -d'/' -f2)/test-comparison/)" >> test-comparison/comparison-report.md
          echo "" >> test-comparison/comparison-report.md
          echo "## Files Generated" >> test-comparison/comparison-report.md
          echo "- Method A: \`test-comparison/method-a-specialized/panorama-viewer.html\`" >> test-comparison/comparison-report.md
          echo "- Method B: \`test-comparison/method-b-generic/panorama-viewer.html\`" >> test-comparison/comparison-report.md
          echo "- Comparison: \`docs/test-comparison/index.html\`" >> test-comparison/comparison-report.md
          
          cat test-comparison/comparison-report.md
          cp test-comparison/comparison-report.md docs/test-comparison/

      - name: üì§ Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: panorama-quality-comparison-${{ github.run_number }}
          path: |
            test-comparison/
            docs/test-comparison/
          retention-days: 7

      - name: ‚úÖ Test Summary
        run: |
          echo "üéØ Panorama Quality Comparison Test Completed!"
          echo "================================================"
          echo ""
          echo "üìã Test Configuration:"
          echo "   ‚Ä¢ Test Image: ${{ github.event.inputs.test_panorama_image }}"
          echo "   ‚Ä¢ Description: ${{ github.event.inputs.test_description }}"
          echo ""
          echo "üåê Generated Viewers:"
          echo "   ‚Ä¢ Method A (Specialized): test-comparison/method-a-specialized/"
          echo "   ‚Ä¢ Method B (Generic): test-comparison/method-b-generic/"
          echo ""
          echo "üìä Comparison Available At:"
          echo "   ‚Ä¢ Local: docs/test-comparison/index.html"
          echo "   ‚Ä¢ Pages: https://$(echo ${{ github.repository }} | cut -d'/' -f1).github.io/$(echo ${{ github.repository }} | cut -d'/' -f2)/test-comparison/"
          echo ""
          echo "üîç Next Steps:"
          echo "   1. Check GitHub Pages deployment"
          echo "   2. Compare visual quality and performance"
          echo "   3. Test seamline continuity and controls"
          echo "   4. Make decision on threejs-panorama-viewer deprecation"
          echo ""
          echo "üì¶ Artifacts: panorama-quality-comparison-${{ github.run_number }}"