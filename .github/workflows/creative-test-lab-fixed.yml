name: Creative Test Lab

on:
  workflow_dispatch:
    inputs:
      experiment_description:
        description: 'テストしたい実験内容'
        required: true
        type: string
      
      mcp_to_test:
        description: 'テストするMCP'
        required: false
        type: string
        default: 'imagen4-fast'
      
      output_type:
        description: '期待するアウトプット'
        type: choice
        options:
          - 'image'
          - 'video'
          - 'music'
          - 'mixed-media'
        default: 'image'

jobs:
  experiment:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
      
      - name: Setup experiment
        run: |
          echo "🧪 実験開始"
          echo "実験内容: ${{ inputs.experiment_description }}"
          echo "使用MCP: ${{ inputs.mcp_to_test }}"
          echo "出力タイプ: ${{ inputs.output_type }}"
          
          # 実験用ディレクトリを作成
          EXPERIMENT_ID="exp-$(date +%Y%m%d-%H%M%S)"
          EXPERIMENT_DIR="experiment-results/$EXPERIMENT_ID"
          
          mkdir -p "$EXPERIMENT_DIR"/{output,logs,config}
          
          echo "実験ID: $EXPERIMENT_ID"
          echo "EXPERIMENT_ID=$EXPERIMENT_ID" >> $GITHUB_ENV
          echo "EXPERIMENT_DIR=$EXPERIMENT_DIR" >> $GITHUB_ENV
      
      - name: Setup MCP configuration
        env:
          MCP_CONFIG: ${{ secrets.MCP_CONFIG }}
        run: |
          # Secretsから基本設定を取得
          if [ -n "$MCP_CONFIG" ]; then
            echo "🔧 SecretsからMCP設定を読み込み中..."
            echo "$MCP_CONFIG" > temp-configs/experiment-config.json
            echo "✅ MCP設定を読み込みました"
          else
            echo "❌ MCP_CONFIG secretが設定されていません"
            # フォールバック: 基本的な設定を作成
            mkdir -p temp-configs
            cat > temp-configs/experiment-config.json << 'EOF'
{
  "mcpServers": {
    "t2i-fal-imagen4-fast": {
      "type": "http",
      "url": "https://mcp-flux-kontext-only-20250716-020022-44f00679-zl3xx5lsaq-uc.a.run.app/t2i/fal/imagen4/fast",
      "description": "Fal.ai Imagen4 Fast Text-to-Image (Speed Optimized)"
    }
  }
}
EOF
            echo "⚠️ デフォルトMCP設定を使用します"
          fi
          
          # 設定ファイルを実験ディレクトリにコピー
          cp temp-configs/experiment-config.json "$EXPERIMENT_DIR/config/"
      
      - name: Execute experiment
        env:
          CLAUDE_ACCESS_TOKEN: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          CLAUDE_REFRESH_TOKEN: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
          CLAUDE_EXPIRES_AT: ${{ secrets.CLAUDE_EXPIRES_AT }}
        run: |
          echo "🚀 実験実行中"
          
          # 実験実行のログを開始
          exec 1> >(tee -a "$EXPERIMENT_DIR/logs/experiment.log")
          exec 2> >(tee -a "$EXPERIMENT_DIR/logs/error.log")
          
          # Claude Code を使用して実験を実行
          timeout 1800 npx claude-code --non-interactive \
            --mcp-config="$EXPERIMENT_DIR/config/experiment-config.json" \
            --message="実験を実行してください。
            
          実験内容: ${{ inputs.experiment_description }}
          期待するアウトプット: ${{ inputs.output_type }}
          使用予定MCP: ${{ inputs.mcp_to_test }}
          
          以下の手順で実験を行ってください：
          1. 実験内容を分析
          2. 適切なMCPを選択
          3. 基本的なアウトプットを生成
          4. 結果を $EXPERIMENT_DIR/output/ に保存
          5. 簡単なレポートを作成
          
          品質よりもスピードを重視し、とにかく何かアウトプットを生成してください。
          失敗してもログに記録して続行してください。" \
            || echo "実験がタイムアウトまたはエラーで終了しました" >> "$EXPERIMENT_DIR/logs/error.log"
          
          echo "実験実行完了"
      
      - name: Create experiment report
        run: |
          # 実験結果のサマリーを作成
          cat > "$EXPERIMENT_DIR/README.md" << EOF
          # 実験結果: $EXPERIMENT_ID
          
          ## 実験概要
          - **実験ID**: $EXPERIMENT_ID
          - **実行日時**: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)
          - **実験内容**: ${{ inputs.experiment_description }}
          - **使用MCP**: ${{ inputs.mcp_to_test }}
          - **期待アウトプット**: ${{ inputs.output_type }}
          
          ## 実験結果
          
          ### 生成ファイル
          EOF
          
          # 生成されたファイルをリストアップ
          if [ -d "$EXPERIMENT_DIR/output" ] && [ "$(ls -A "$EXPERIMENT_DIR/output")" ]; then
            echo "- 生成されたファイル:" >> "$EXPERIMENT_DIR/README.md"
            ls -la "$EXPERIMENT_DIR/output/" >> "$EXPERIMENT_DIR/README.md"
          else
            echo "- 生成されたファイル: なし" >> "$EXPERIMENT_DIR/README.md"
          fi
          
          echo "📋 実験レポートを作成しました"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: experiment-results-${{ env.EXPERIMENT_ID }}
          path: experiment-results/${{ env.EXPERIMENT_ID }}/
          retention-days: 30
      
      - name: Commit results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add experiment-results/
          git add experiments/
          
          if git diff --cached --quiet; then
            echo "コミットするものがありません"
          else
            git commit -m "Add experiment results: $EXPERIMENT_ID

          実験内容: ${{ inputs.experiment_description }}
          使用MCP: ${{ inputs.mcp_to_test }}
          
          🧪 Generated with Creative Test Lab
          
          Co-Authored-By: Claude <noreply@anthropic.com>"
            git push
          fi
          
          echo "🎉 実験完了: $EXPERIMENT_ID"